openapi: 3.0.0
info:
  title: SweetPotato Server 3 API
  version: 0.5.10
  description: |-
    Advanced Sonolus API server with adds many features (Python)  
    Development repository is [here](https://github.com/PurplePalette/sonolus-fastapi)

    ### Sonolus-Version
    - 0.5.10

    ### Features
    - supports uploading every sonolus contents
    - tests server for chart testing
    - users server for get levels only from specific user
    - accounts server for make personal special features
    - announces section to showing server maintenence infos
    - pickups section to showing admin recommendation levels
    - random, flick-paradise, vote, mylist and more!

    ### Note
    - This file have many tags, since every generated files were too big and needed to separate.
    - Actually many endpoints can inherit another endpoints. it won't be big project.
    - openapi-generator-cli python-fastapi gen makes broken models, you need fix below:
      - All req/resp fields be snake_case, but sonolus official doc is snakeCase
      - Union type of SearchOptions be broken.
    ### Original comments
    - フロントエンド専用のエンドポイントは一切持たずマイリストなどを含め全てのリクエストはSonolusアプリ内のリクエストと互換するAPI(つまり全部の処理がGETになる、きっも...)
    - ユーザー認証は以前同様に FirebaseAuthorizationでなんとかする。accountsエンドポイントはaccountKeyとかいう概念使ってゴリ押しする、セキュリティ上よろしくないが...まぁゲームだしええやろ!
  contact:
    name: お窓
    url: 'https://discord.gg/KEfVkfC6Q9'
  termsOfService: 'https://discord.gg/KEfVkfC6Q9'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/mit-license.php'
servers:
  - url: 'http://localhost:5000'
    description: Local
paths:
  /backgrounds/list:
    get:
      summary: Get background list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
      operationId: getBackgroundList
      description: |-
        It returns list of background infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      tags:
        - default_backgrounds
  '/backgrounds/{backgroundName}':
    parameters:
      - schema:
          type: string
        name: backgroundName
        in: path
        required: true
    get:
      summary: Get a background
      tags:
        - default_backgrounds
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '404':
          description: Not Found
      operationId: getBackground
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
    patch:
      summary: Edit a background
      operationId: editBackground
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定された背景情報を編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      tags:
        - default_backgrounds
      security:
        - Authorization: []
    delete:
      summary: Delete a background
      operationId: deleteBackground
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Delete specified background
      tags:
        - default_backgrounds
      security:
        - Authorization: []
  /backgrounds:
    parameters: []
    post:
      summary: Add a background
      operationId: addBackground
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定された背景情報をサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
        description: ''
      tags:
        - default_backgrounds
      security:
        - Authorization: []
  /effects/list:
    get:
      summary: Get effect list
      tags:
        - default_effects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
      operationId: getEffectList
      description: |-
        It returns list of effect infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
  '/effects/{effectName}':
    parameters:
      - schema:
          type: string
        name: effectName
        in: path
        required: true
    get:
      summary: Get an effect
      tags:
        - default_effects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '404':
          description: Not Found
      operationId: getEffect
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
    patch:
      summary: Edit an effect
      operationId: editEffect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定されたeffectを編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      tags:
        - default_effects
      security:
        - Authorization: []
    delete:
      summary: Delete an effect
      operationId: deleteEffect
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: delete specified effect
      tags:
        - default_effects
      security:
        - Authorization: []
  /effects:
    parameters: []
    post:
      summary: Add an effect
      operationId: addEffect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定されたeffectをサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      tags:
        - default_effects
      security:
        - Authorization: []
  /engines/list:
    get:
      summary: Get engine list
      tags:
        - default_engines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
      operationId: getEngineList
      description: |-
        It returns list of engine infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
  '/engines/{engineName}':
    parameters:
      - schema:
          type: string
        name: engineName
        in: path
        required: true
    get:
      summary: Get an engine
      tags:
        - default_engines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '404':
          description: Not Found
      operationId: getEngine
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
    patch:
      summary: Edit an engine
      operationId: editEngine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定されたengineを編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      tags:
        - default_engines
      security:
        - Authorization: []
    delete:
      summary: Delete an engine
      operationId: deleteEngine
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - default_engines
      description: delete a engine
      security:
        - Authorization: []
  /engines:
    parameters: []
    post:
      summary: Add an engine
      operationId: addEngine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定されたゲームエンジンをサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      tags:
        - default_engines
      security:
        - Authorization: []
  /levels/announce:
    get:
      summary: Get announce infos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAnnounceList
      description: 現在のアナウンス一覧を取得します
      tags:
        - default_levels_specials
  '/levels/announce_{announceName}':
    parameters:
      - schema:
          type: string
        name: announceName
        in: path
        required: true
    get:
      summary: Get an announce info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAnnounce
      description: 指定されたアナウンス情報を表示します
      tags:
        - default_levels_specials
  /levels/pickups:
    get:
      summary: Get pickup levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
      operationId: getPickups
      description: 管理者の指定したおすすめ譜面などを返すエンドポイント
      tags:
        - default_levels_specials
  /levels/debut:
    get:
      summary: Get debut levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
      operationId: getFreshReleases
      description: 新規譜面作者の譜面のみを返すエンドポイント
      tags:
        - default_levels_specials
    parameters: []
  /levels/list:
    get:
      summary: Get level list
      tags:
        - default_levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
      operationId: getLevelList
      description: |-
        It returns list of level infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/rating_min'
        - $ref: '#/components/parameters/rating_max'
        - $ref: '#/components/parameters/genre'
        - $ref: '#/components/parameters/length'
        - $ref: '#/components/parameters/random'
  '/levels/{levelName}':
    parameters:
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Get a level
      tags:
        - default_levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
    patch:
      summary: Edit a level
      operationId: editLevel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定されたlevelを編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      tags:
        - default_levels
      security:
        - Authorization: []
    delete:
      summary: Delete a level
      operationId: deleteLevel
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定されたレベルを削除します
      tags:
        - default_levels
      security:
        - Authorization: []
  /levels:
    parameters: []
    post:
      summary: Add a level
      operationId: addLevel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定された譜面情報をサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      tags:
        - default_levels
      security:
        - Authorization: []
  /particles/list:
    get:
      summary: Get particle list
      tags:
        - default_particles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
      operationId: getParticleList
      description: |-
        It returns list of particle infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
  '/particles/{particleName}':
    parameters:
      - schema:
          type: string
        name: particleName
        in: path
        required: true
    get:
      summary: Get a particle
      tags:
        - default_particles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '404':
          description: Not Found
      operationId: getParticle
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
    patch:
      summary: Edit a particle
      operationId: editParticle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定したparticleを編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      tags:
        - default_particles
      security:
        - Authorization: []
    delete:
      summary: Delete a particle
      operationId: deleteParticle
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - default_particles
      description: 指定されたパーティクルを削除する
      security:
        - Authorization: []
  /particles:
    parameters: []
    post:
      summary: Add a particle
      operationId: addParticle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定されたパーティクル情報をサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      tags:
        - default_particles
      security:
        - Authorization: []
  /skins/list:
    get:
      summary: Get skin list
      tags:
        - default_skins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
      operationId: getSkinList
      description: |-
        It returns list of skin infos registered in this server
        Also it can search using query params
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
  '/skins/{skinName}':
    parameters:
      - schema:
          type: string
        name: skinName
        in: path
        required: true
    get:
      summary: Get a skin
      tags:
        - default_skins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '404':
          description: Not Found
      operationId: getSkin
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
    patch:
      summary: Edit a skin
      operationId: editSkin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定したskinを編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      tags:
        - default_skins
      security:
        - Authorization: []
    delete:
      summary: Delete a skin
      operationId: deleteSkin
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - default_skins
      description: 指定されたスキンを削除します
      security:
        - Authorization: []
  /skins:
    parameters: []
    post:
      summary: Add a skin
      operationId: addSkin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: 指定されたスキン情報をサーバーに登録します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      tags:
        - default_skins
      security:
        - Authorization: []
  /info:
    get:
      summary: Get default server info
      tags:
        - default_info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
      operationId: getServerInfo
      description: |-
        It returns small list of all infos registered in this server
        (It should be trimed if the server has too many items)
  '/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get a user
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
      operationId: getUser
      description: 指定したユーザー情報を取得します
    patch:
      summary: Edit a user
      operationId: editUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - users
      description: 指定したuser情報を編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - Authorization: []
    delete:
      summary: Delete a user
      operationId: deleteUser
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定したユーザーを削除します
      tags:
        - users
      security:
        - Authorization: []
  /users:
    parameters: []
    post:
      summary: Add a user
      operationId: addUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: Add specified new user to server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - users
      security:
        - Authorization: []
  /users/list:
    get:
      summary: Get user list
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserListResponse'
      operationId: getUserList
      description: サーバーに登録されたユーザー一覧を返します
  '/tests/{testId}/info':
    get:
      summary: Get test server info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
      operationId: getTestServerInfo
      description: テスト個別の情報一覧を返します
      tags:
        - tests_info
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/backgrounds/list':
    get:
      summary: Get tests background list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
        '404':
          description: Not Found
      operationId: getTestsBackgrounds
      description: 譜面テスト用エンドポイント/ 背景一覧を返す(一般の背景リストと同じのが返される)
      tags:
        - tests_backgrounds
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/backgrounds/{backgroundName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: backgroundName
        in: path
        required: true
    get:
      summary: Get tests background
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '404':
          description: Not Found
      operationId: getBackgroundTest
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      tags:
        - tests_backgrounds
  '/tests/{testId}/effects/list':
    get:
      summary: Get tests effects list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
        '404':
          description: Not Found
      operationId: getTestsEffects
      description: 譜面テスト用エンドポイント/ エフェクト一覧を返す(一般のエフェクトリストと同じのが返される)
      tags:
        - tests_effects
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/effects/{effectName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: effectName
        in: path
        required: true
    get:
      summary: Get tests effect list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '404':
          description: Not Found
      operationId: getEffectTest
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      tags:
        - tests_effects
  '/tests/{testId}/engines/list':
    get:
      summary: Get tests engine list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
        '404':
          description: Not Found
      operationId: getTestsEngines
      description: 譜面テスト用エンドポイント/ エンジン一覧を返す(一般のエンジンリストと同じのが返される)
      tags:
        - tests_engines
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/engines/{engineName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: engineName
        in: path
        required: true
    get:
      summary: Get tests engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '404':
          description: Not Found
      operationId: getEngineTest
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      tags:
        - tests_engines
  '/tests/{testId}/levels/list':
    get:
      summary: Get tests level list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/rating_min'
        - $ref: '#/components/parameters/rating_max'
        - $ref: '#/components/parameters/genre'
        - $ref: '#/components/parameters/length'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
        '404':
          description: Not Found
      operationId: getTestsLevels
      description: 譜面テスト用エンドポイント/ 背景一覧を返す
      tags:
        - tests_levels
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/levels/{levelName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Get tests level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getLevelTest
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - tests_levels
  '/tests/{testId}/particles/list':
    get:
      summary: Get tests particle list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
        '404':
          description: Not Found
      operationId: getTestsParticles
      description: 譜面テスト用エンドポイント/ パーティクル一覧を返す(一般の背景リストと同じのが返される)
      tags:
        - tests_particles
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/tests/{testId}/particles/{particleName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: particleName
        in: path
        required: true
    get:
      summary: Get tests particle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '404':
          description: Not Found
      operationId: getParticleTest
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      tags:
        - tests_particles
  '/tests/{testId}/skins/{skinName}':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: skinName
        in: path
        required: true
    get:
      summary: Get tests skin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '404':
          description: Not Found
      operationId: getSkinTest
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      tags:
        - tests_skins
  '/tests/{testId}/skins/list':
    get:
      summary: Get tests skin list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
        '404':
          description: Not Found
      operationId: getTestsSkins
      description: 譜面テスト用エンドポイント/ スキン一覧を返す(一般のスキンリストと同じのが返される)
      tags:
        - tests_skins
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/users/{userId}/info':
    get:
      summary: Get user server info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
      operationId: getUserServerInfo
      description: ユーザー個別の情報一覧を返します
      tags:
        - users_info
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/backgrounds/list':
    get:
      summary: Get users background list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
        '404':
          description: Not Found
      operationId: getUsersBackgrounds
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      tags:
        - users_backgrounds
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/backgrounds/{backgroundName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: backgroundName
        in: path
        required: true
    get:
      summary: Get users background
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '404':
          description: Not Found
      operationId: getUsersBackground
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      tags:
        - users_backgrounds
  '/users/{userId}/effects/list':
    get:
      summary: Get users effect list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
        '404':
          description: Not Found
      operationId: getUsersEffects
      description: ユーザー個別用エンドポイント/ エフェクト一覧を返す
      tags:
        - users_effects
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/effects/{effectName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: effectName
        in: path
        required: true
    get:
      summary: Get users effect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '404':
          description: Not Found
      operationId: getUsersEffect
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      tags:
        - users_effects
  '/users/{userId}/engines/list':
    get:
      summary: Get users engine list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
        '404':
          description: Not Found
      operationId: getUsersEngines
      description: ユーザー個別用エンドポイント/ エンジン一覧を返す
      tags:
        - users_engines
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/engines/{engineName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: engineName
        in: path
        required: true
    get:
      summary: Get users engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '404':
          description: Not Found
      operationId: getUsersEngine
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      tags:
        - users_engines
  '/users/{userId}/levels/list':
    get:
      summary: Get users level list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/rating_min'
        - $ref: '#/components/parameters/rating_max'
        - $ref: '#/components/parameters/genre'
        - $ref: '#/components/parameters/length'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
        '404':
          description: Not Found
      operationId: getUsersLevels
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      tags:
        - users_levels
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/levels/{levelName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Get users level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getUsersLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - users_levels
  '/users/{userId}/particles/list':
    get:
      summary: Get users particle list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
        '404':
          description: Not Found
      operationId: getUsersParticles
      description: ユーザー個別用エンドポイント/ パーティクル一覧を返す
      tags:
        - users_particles
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/particles/{particleName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: particleName
        in: path
        required: true
    get:
      summary: Get users particle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '404':
          description: Not Found
      operationId: getUsersParticle
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      tags:
        - users_particles
  '/users/{userId}/skins/list':
    get:
      summary: Get users skin list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
        '404':
          description: Not Found
      operationId: getUsersSkins
      description: ユーザー個別用エンドポイント/ スキン一覧を返す
      tags:
        - users_skins
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  '/users/{userId}/skins/{skinName}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: skinName
        in: path
        required: true
    get:
      summary: Get users skin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '404':
          description: Not Found
      operationId: getUsersSkin
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      tags:
        - users_skins
  '/accounts/{accountKey}/info':
    get:
      summary: Get account server info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
      operationId: getAccountsServerInfo
      description: ユーザー個別の情報一覧を返します
      tags:
        - accounts_info
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/backgrounds/list':
    get:
      summary: Get accounts background list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
        '404':
          description: Not Found
      operationId: getAccountsBackgrounds
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      tags:
        - accounts_backgrounds
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/backgrounds/{backgroundName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: backgroundName
        in: path
        required: true
    get:
      summary: Get accounts background
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
        '404':
          description: Not Found
      operationId: getAccountsBackground
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      tags:
        - accounts_backgrounds
  '/accounts/{accountKey}/effects/list':
    get:
      summary: Get accounts effect list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
        '404':
          description: Not Found
      operationId: getAccountsEffects
      description: ユーザー個別用エンドポイント/ エフェクト一覧を返す
      tags:
        - accounts_effects
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/effects/{effectName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: effectName
        in: path
        required: true
    get:
      summary: Get accounts effect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
        '404':
          description: Not Found
      operationId: getAccountsEffect
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      tags:
        - accounts_effects
  '/accounts/{accountKey}/engines/list':
    get:
      summary: Get accounts engine list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
        '404':
          description: Not Found
      operationId: getAccountsEngines
      description: ユーザー個別用エンドポイント/ エンジン一覧を返す
      tags:
        - accounts_engines
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/engines/{engineName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: engineName
        in: path
        required: true
    get:
      summary: Get accounts engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
        '404':
          description: Not Found
      operationId: getAccountsEngine
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      tags:
        - accounts_engines
  '/accounts/{accountKey}/levels/list':
    get:
      summary: Get accounts level list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
        '404':
          description: Not Found
      operationId: getAccountsLevels
      description: ユーザー個別用エンドポイント/ 譜面一覧を返す
      tags:
        - accounts_levels
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/levels/{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Get accounts level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountsLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels
  '/accounts/{accountKey}/levels/pickups':
    get:
      summary: Get pickup levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountPickupLevels
      description: 管理者の指定したおすすめ譜面などを返すエンドポイント
      tags:
        - accounts_levels_specials
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/levels/debut':
    get:
      summary: Get debut levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountDebutLevels
      description: 新規譜面作者の譜面のみを返すエンドポイント
      tags:
        - accounts_levels_specials
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/levels/favorite_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Favorite level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: favoriteLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/unfavorite_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Unfavorite level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: unfavoriteLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/like_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Like a level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: rateLevel
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/flick_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Get flick level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getFlickLevel
      description: 譜面のノーツ部分をゴリ押しでフリックのみに差し替えた特殊な譜面を取得する
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/rating_increase_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Vote for increase rating on a level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: increaseRating
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/rating_decrease_{levelName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: levelName
        in: path
        required: true
    get:
      summary: Vote for decrease rating on a level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: decreaseRating
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/mylist':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
    get:
      summary: Get mylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountMylist
      description: 対象の鍵を持つユーザーのマイリストを取得します
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/random':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
    get:
      summary: Get a random level
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountRandom
      description: ランダムな譜面を取得します
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/announce':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
    get:
      summary: Get announce list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountAnnounceList
      description: 現在のアナウンス一覧を取得します
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/levels/announce_{announceName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: announceName
        in: path
        required: true
    get:
      summary: Get announce
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getAccountAnnounce
      description: 指定されたアナウンス情報を表示します
      tags:
        - accounts_levels_specials
  '/accounts/{accountKey}/particles/list':
    get:
      summary: Get accounts particle list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
        '404':
          description: Not Found
      operationId: getAccountsParticles
      description: ユーザー個別用エンドポイント/ パーティクル一覧を返す
      tags:
        - accounts_particles
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/particles/{particleName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: particleName
        in: path
        required: true
    get:
      summary: Get accounts particle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
        '404':
          description: Not Found
      operationId: getAccountsParticle
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      tags:
        - accounts_particles
  '/accounts/{accountKey}/skins/list':
    get:
      summary: Get accounts skin list
      parameters:
        - $ref: '#/components/parameters/localization'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/keywords'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/author'
        - $ref: '#/components/parameters/random'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
        '404':
          description: Not Found
      operationId: getAccountsSkins
      description: ユーザー個別用エンドポイント/ スキン一覧を返す
      tags:
        - accounts_skins
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
  '/accounts/{accountKey}/skins/{skinName}':
    parameters:
      - schema:
          type: string
        name: accountKey
        in: path
        required: true
      - schema:
          type: string
        name: skinName
        in: path
        required: true
    get:
      summary: Get accounts skin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
        '404':
          description: Not Found
      operationId: getAccountsSkin
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      tags:
        - accounts_skins
  /pickups:
    post:
      summary: Add pickup
      operationId: addPickup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pickup'
      description: 譜面のピックアップを追加します
      tags:
        - pickups
      security:
        - Authorization: []
  '/pickups/{pickupName}':
    delete:
      summary: Delete pickup
      operationId: deletePickup
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定したピックアップを削除します
      tags:
        - pickups
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
        name: pickupName
        in: path
        required: true
    get:
      summary: Get pickup
      operationId: getPickup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      tags:
        - pickups
      description: 指定されたIDのピックアップを取得して返す
  /pickups/list:
    get:
      summary: Get pickup list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
      operationId: getPickupList
      description: ピックアップ中のデータ一覧を返す
      tags:
        - pickups
  /announces:
    post:
      summary: Add announce
      operationId: addAnnounce
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
      description: 譜面のピックアップを追加します
      tags:
        - announces
      security:
        - Authorization: []
  /announces/list:
    get:
      summary: Get announce list
      tags:
        - announces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
              examples:
                example-1:
                  value:
                    pageCount: 1
                    items:
                      - name: string
                        version: 1
                        rating: 1
                        engine:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          configuration:
                            type: LevelData
                            hash: string
                            url: string
                          skin:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            texture:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                          background:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            image:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                          effect:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                          particle:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            texture:
                              type: LevelData
                              hash: string
                              url: string
                            userId: string
                            createdTime: 0
                            updatedTime: 0
                            description: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                        useSkin:
                          useDefault: true
                          item:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            texture:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                        useBackground:
                          useDefault: true
                          item:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            image:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                        useEffect:
                          useDefault: true
                          item:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            createdTime: 0
                            updatedTime: 0
                            userId: string
                            description: string
                        useParticle:
                          useDefault: true
                          item:
                            name: string
                            version: 1
                            title: string
                            subtitle: string
                            author: string
                            thumbnail:
                              type: LevelData
                              hash: string
                              url: string
                            data:
                              type: LevelData
                              hash: string
                              url: string
                            texture:
                              type: LevelData
                              hash: string
                              url: string
                            userId: string
                            createdTime: 0
                            updatedTime: 0
                            description: string
                        title: string
                        artists: string
                        author: string
                        cover:
                          type: LevelData
                          hash: string
                          url: string
                        bgm:
                          type: LevelData
                          hash: string
                          url: string
                        preview:
                          type: LevelData
                          hash: string
                          url: string
                        data:
                          type: LevelData
                          hash: string
                          url: string
                        genre:
                          - general
                        public: false
                        userId: string
                        notes: 1
                        createdTime: 0
                        updatedTime: 0
                        description: string
                        length: 0
                    search:
                      options: []
      operationId: getDefaultAnnounces
      description: アナウンス中のデータ一覧を返す
  '/announces/{announceName}':
    get:
      summary: Get announce
      tags:
        - announces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '404':
          description: Not Found
      operationId: getDefaultAnnounce
      description: 指定されたアナウンスデータを返す
    parameters:
      - schema:
          type: string
        name: announceName
        in: path
        required: true
    delete:
      summary: Delete announce
      operationId: deleteAnnounce
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定されたアナウンスを削除します
      tags:
        - announces
      security:
        - Authorization: []
    patch:
      summary: Edit announce
      operationId: editAnnounce
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 指定したアナウンスを編集します
      tags:
        - announces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
      security:
        - Authorization: []
  /upload:
    post:
      summary: Upload a file
      operationId: uploadFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUploadResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '413':
          description: Request Entity Too Large
        '429':
          description: Too Many Requests
      tags:
        - uploads
      description: |-
        ファイルのアップロードを受け付ける
        (投稿から1時間以上使用されないファイルは自動削除したい)
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
      security:
        - Authorization: []
components:
  schemas:
    Level:
      description: |-
        A level provides a list of entities and powered by scripted behavior in engine, with skin, effect, background and particle, to create gameplay experience for players / It defines level for actual user play. It includes all data to play one level.
        https://wiki.sonolus.com/custom-server-specs/misc/level-item.html
      type: object
      x-examples: {}
      title: Level
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        version:
          type: integer
          default: 1
          minimum: 1
          example: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        rating:
          type: integer
          description: Difficulty of the level
          minimum: 1
          maximum: 100
        engine:
          $ref: '#/components/schemas/Engine'
        useSkin:
          type: object
          properties:
            useDefault:
              type: boolean
              description: 'If true (recommended), default resource specified by the engine will be used.'
              default: true
            item:
              $ref: '#/components/schemas/Skin'
        useBackground:
          type: object
          properties:
            useDefault:
              type: boolean
              description: 'If true (recommended), default resource specified by the engine will be used.'
              default: true
            item:
              $ref: '#/components/schemas/Background'
        useEffect:
          type: object
          properties:
            useDefault:
              type: boolean
              description: 'If true (recommended), default resource specified by the engine will be used.'
              default: true
            item:
              $ref: '#/components/schemas/Effect'
        useParticle:
          type: object
          properties:
            useDefault:
              type: boolean
              description: 'If true (recommended), default resource specified by the engine will be used.'
              default: true
            item:
              $ref: '#/components/schemas/Particle'
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        artists:
          type: string
          minLength: 1
          description: artist names of original music
          maxLength: 100
        artistsEn:
          type: string
          maxLength: 100
          description: artist names(english) of original music
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        cover:
          $ref: '#/components/schemas/SonolusResourceLocator'
        bgm:
          $ref: '#/components/schemas/SonolusResourceLocator'
        preview:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        public:
          type: boolean
          default: false
          description: 楽曲が全体公開かどうか
        genre:
          type: array
          description: 楽曲のジャンル
          example:
            - general
          default:
            - general
          uniqueItems: true
          items:
            type: string
            enum:
              - general
              - jpop
              - anime
              - vocaloid
            example: general
            default: general
            minLength: 1
            maxLength: 20
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        length:
          type: integer
          default: 0
          example: 0
          minimum: 0
          maximum: 99999
          description: 曲の長さ
        bpm:
          type: integer
          description: BPM
          minimum: 0
          maximum: 10000
          default: 1
        notes:
          type: integer
          description: 譜面内のノーツ数
          minimum: 1
          maximum: 10000000
          default: 1
        likes:
          type: integer
          description: いいねされた回数
          default: 0
          minimum: 0
          maximum: 10000000
        mylists:
          type: integer
          description: マイリストされた回数
          minimum: 0
          maximum: 10000000
          default: 0
    Announce:
      description: お知らせ情報のリクエスト
      type: object
      x-examples: {}
      title: Announce
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        rating:
          type: integer
          description: Difficulty of the level
          minimum: 1
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: artist names of original music
          maxLength: 100
        subtitleEn:
          type: string
          maxLength: 100
          description: artist names(english) of original music
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        cover:
          $ref: '#/components/schemas/SonolusResourceLocator'
        bgm:
          $ref: '#/components/schemas/SonolusResourceLocator'
        preview:
          $ref: '#/components/schemas/SonolusResourceLocator'
        public:
          type: boolean
          default: false
          description: 楽曲が全体公開かどうか
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
    Skin:
      description: |-
        A skin provides graphic elements to levels / It defines graphics for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/skin-item.html
      type: object
      x-examples: {}
      title: Skin
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        version:
          type: integer
          default: 1
          minimum: 1
          example: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        subtitleEn:
          type: string
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        public:
          type: boolean
          default: false
          description: 全体公開かどうか
    Background:
      description: |-
        A background provides background graphical element to levels / It defines background used for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Background
      type: object
      x-examples: {}
      title: Background
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 50
        version:
          type: integer
          default: 1
          minimum: 1
          example: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        subtitleEn:
          type: string
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        image:
          $ref: '#/components/schemas/SonolusResourceLocator'
        configuration:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        public:
          type: boolean
          default: false
          description: 全体公開かどうか
    Effect:
      description: |-
        An effect provides audio elements to levels / It defines audio effect used for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/effect-item.html
      type: object
      x-examples: {}
      title: Effect
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        version:
          type: integer
          default: 1
          minimum: 1
          example: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        subtitleEn:
          type: string
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        public:
          type: boolean
          default: false
          description: 全体公開かどうか
    Particle:
      description: |-
        A particle provides particle effect elements to levels / It defines particle effect used for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/particle-item.html
      type: object
      x-examples: {}
      title: Particle
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        version:
          type: integer
          default: 1
          minimum: 1
          example: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        subtitleEn:
          type: string
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        public:
          type: boolean
          default: false
          description: 全体公開かどうか
    Engine:
      description: |-
        An engine provides scripted behaviors to levels / It defines shared game engine for playing
        https://wiki.sonolus.com/custom-server-specs/misc/engine-item.html
      type: object
      x-examples: {}
      title: Engine
      properties:
        name:
          type: string
          minLength: 1
          description: english and number only name for searching
          maxLength: 100
        version:
          type: integer
          default: 1
          example: 1
          minimum: 1
          description: Reserved for future update. current default is 1.
          maximum: 100
        title:
          type: string
          minLength: 1
          description: base title of this content
          maxLength: 100
        titleEn:
          type: string
          maxLength: 100
          description: base title(english) of this content
        subtitle:
          type: string
          minLength: 1
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        subtitleEn:
          type: string
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
        author:
          type: string
          minLength: 1
          description: author of this content
          maxLength: 50
        authorEn:
          type: string
          maxLength: 50
          description: author of this content
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        descriptionEn:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
          default: No description
          example: No description
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        configuration:
          $ref: '#/components/schemas/SonolusResourceLocator'
        skin:
          $ref: '#/components/schemas/Skin'
        background:
          $ref: '#/components/schemas/Background'
        effect:
          $ref: '#/components/schemas/Effect'
        particle:
          $ref: '#/components/schemas/Particle'
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        userId:
          type: string
          description: 譜面作成者のユーザーID
          minLength: 1
          maxLength: 100
        public:
          type: boolean
          default: false
          description: 全体公開かどうか
    SonolusResourceLocator:
      description: |-
        Sonolus Resource Locator(SRL) is used in server endpoints in order for Sonolus to locate a resource.
        All resources must be gzip compressed.
        https://wiki.sonolus.com/custom-server-specs/misc/srl.html
      type: object
      x-examples:
        example:
          type: EffectData
          hash: addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
          url: /repository/EffectData/addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
      title: SonolusResourceLocator
      properties:
        type:
          type: string
          minLength: 1
          enum:
            - SkinData
            - EngineThumbnail
            - EffectData
            - SkinTexture
            - ParticleData
            - EffectThumbnail
            - LevelBgm
            - BackgroundThumbnail
            - EngineConfiguration
            - LevelData
            - LevelPreview
            - ParticleTexture
            - BackgroundData
            - EngineData
            - BackgroundImage
            - LevelCover
            - SkinThumbnail
            - ParticleThumbnail
            - BackgroundConfiguration
          example: LevelData
          maxLength: 50
          description: When specify type together with hash uniquely identifies a resource.
        hash:
          type: string
          description: Hash is calculated using SHA1 on the resource file
          maxLength: 100
        url:
          type: string
          minLength: 1
          description: 'If url starts with character /, it will be treated as relative path to server address.'
          maxLength: 500
    GetBackgroundListResponse:
      title: GetBackgroundListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getBackgroundList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-backgrounds-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Background'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetEffectListResponse:
      title: GetEffectListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getEffectList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-effects-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Effect'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetEngineListResponse:
      title: GetEngineListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getEngineList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-engines-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Engine'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetLevelListResponse:
      title: GetLevelListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getLevelList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-levels-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Level'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetParticleListResponse:
      title: GetParticleListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getParticleList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-particles-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Particle'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetSkinListResponse:
      title: GetSkinListResponse
      type: object
      x-examples: {}
      description: |-
        Response struct of getSkinList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-skins-list.html
      properties:
        pageCount:
          type: integer
          minimum: 1
          default: 1
          example: 1
          description: 'used for pagination, default is 1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Skin'
        search:
          $ref: '#/components/schemas/Search'
      required:
        - pageCount
        - items
        - search
    GetLevelResponse:
      description: |-
        Response struct of getLevel
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-levels-name.html
      type: object
      x-examples: {}
      title: GetLevelResponse
      properties:
        item:
          $ref: '#/components/schemas/Level'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Level'
      required:
        - item
        - description
        - recommended
    GetBackgroundResponse:
      description: |-
        Response struct of getBackground
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-backgrounds-name.html
      type: object
      x-examples: {}
      title: GetBackgroundResponse
      properties:
        item:
          $ref: '#/components/schemas/Background'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Background'
      required:
        - item
        - description
        - recommended
    GetEffectResponse:
      description: |-
        Response struct of getEffect
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-effects-name.html
      type: object
      x-examples: {}
      title: GetEffectResponse
      properties:
        item:
          $ref: '#/components/schemas/Effect'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Effect'
      required:
        - item
        - description
        - recommended
    GetEngineResponse:
      description: |-
        Response struct of getEngine
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-engines-name.html
      type: object
      x-examples: {}
      title: GetEngineResponse
      properties:
        item:
          $ref: '#/components/schemas/Engine'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Engine'
      required:
        - item
        - description
        - recommended
    GetParticleResponse:
      description: |-
        Response struct of getParticle
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-particles-name.html
      type: object
      x-examples: {}
      title: GetParticleResponse
      properties:
        item:
          $ref: '#/components/schemas/Particle'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Particle'
      required:
        - item
        - description
        - recommended
    GetSkinResponse:
      description: |-
        Response struct of getSkin
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-skins-name.html
      type: object
      x-examples: {}
      title: GetSkinResponse
      properties:
        item:
          $ref: '#/components/schemas/Skin'
        description:
          type: string
        recommended:
          type: array
          items:
            $ref: '#/components/schemas/Skin'
      required:
        - item
        - description
        - recommended
    ServerInfo:
      description: |-
        Response struct of getServerInfo
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-info.html
      type: object
      x-examples:
        example-1:
          levels:
            items:
              - name: string
                version: 1
                rating: 1
                engine:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  configuration:
                    type: LevelData
                    hash: string
                    url: string
                  skin:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    texture:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                  background:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    image:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                  effect:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                  particle:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    texture:
                      type: LevelData
                      hash: string
                      url: string
                    userId: string
                    createdTime: 0
                    updatedTime: 0
                    description: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                useSkin:
                  useDefault: true
                  item:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    texture:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                useBackground:
                  useDefault: true
                  item:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    image:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                useEffect:
                  useDefault: true
                  item:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    createdTime: 0
                    updatedTime: 0
                    userId: string
                    description: string
                useParticle:
                  useDefault: true
                  item:
                    name: string
                    version: 1
                    title: string
                    subtitle: string
                    author: string
                    thumbnail:
                      type: LevelData
                      hash: string
                      url: string
                    data:
                      type: LevelData
                      hash: string
                      url: string
                    texture:
                      type: LevelData
                      hash: string
                      url: string
                    userId: string
                    createdTime: 0
                    updatedTime: 0
                    description: string
                title: string
                artists: string
                author: string
                cover:
                  type: LevelData
                  hash: string
                  url: string
                bgm:
                  type: LevelData
                  hash: string
                  url: string
                preview:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                genre: general
                public: false
                userId: string
                notes: 1
                createdTime: 0
                updatedTime: 0
                description: string
                length: 0
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
          skins:
            items:
              - name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                texture:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
          backgrounds:
            items:
              - name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                image:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
          effects:
            items:
              - name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
          particles:
            items:
              - name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                texture:
                  type: LevelData
                  hash: string
                  url: string
                userId: string
                createdTime: 0
                updatedTime: 0
                description: string
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
          engines:
            items:
              - name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                configuration:
                  type: LevelData
                  hash: string
                  url: string
                skin:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                background:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  image:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                effect:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                particle:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  userId: string
                  createdTime: 0
                  updatedTime: 0
                  description: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
            search:
              options:
                - query: string
                  name: string
                  type: text
                  placeholder: string
      title: ServerInfo
      properties:
        levels:
          required:
            - items
            - search
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Level'
            search:
              $ref: '#/components/schemas/Search'
        skins:
          type: object
          required:
            - items
            - search
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Skin'
            search:
              $ref: '#/components/schemas/Search'
        backgrounds:
          required:
            - items
            - search
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Background'
            search:
              $ref: '#/components/schemas/Search'
        effects:
          type: object
          required:
            - items
            - search
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Effect'
            search:
              $ref: '#/components/schemas/Search'
        particles:
          required:
            - items
            - search
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Particle'
            search:
              $ref: '#/components/schemas/Search'
        engines:
          type: object
          required:
            - items
            - search
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Engine'
            search:
              $ref: '#/components/schemas/Search'
      required:
        - levels
        - skins
        - backgrounds
        - effects
        - particles
        - engines
    User:
      title: User
      type: object
      description: ユーザー情報型
      x-examples:
        example:
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
          testId: htcckfcn
          accountKey: super_secret_key
          description: string
          createdTime: 0
          updatedTime: 0
          total:
            likes: 0
            plays: 0
            favorites: 0
            publish:
              backgrounds: 0
              effects: 0
              engines: 0
              particles: 0
              levels: 0
              skins: 0
          isAdmin: false
          isDeleted: false
      properties:
        userId:
          type: string
          description: FirebaseDatabase上のユーザーID
          example: gz6xQrm79IN4BiQag78sQqYWYlC3
          default: gz6xQrm79IN4BiQag78sQqYWYlC3
          minLength: 1
          maxLength: 30
        testId:
          type: string
          description: テスト用サーバーのエンドポイント
          example: htcckfcn
          minLength: 1
          maxLength: 30
          default: htcckfcn
        accountId:
          type: string
          description: アカウント鍵
          default: super_secret_key
          example: super_secret_key
        description:
          type: string
          description: サイト内および譜面情報欄に表示される説明文
          maxLength: 3000
        createdTime:
          type: integer
          description: データを作成したエポックミリ秒(ソート用)
          minimum: 0
        updatedTime:
          type: integer
          description: データを更新したエポックミリ秒(ソート用)
          minimum: 0
        total:
          type: object
          description: 各種統計
          properties:
            likes:
              type: integer
              description: いいねされた回数
              minimum: 0
              maximum: 10000000
              default: 0
              example: 0
            plays:
              type: integer
              description: プレイした回数
              maximum: 10000000
              minimum: 0
              default: 0
              example: 0
            favorites:
              type: integer
              description: お気に入りした回数
              minimum: 0
              maximum: 10000000
              default: 0
              example: 0
            publish:
              type: object
              description: 公開した個数
              properties:
                backgrounds:
                  type: integer
                  description: 背景数
                effects:
                  type: integer
                  description: 効果音数
                engines:
                  type: integer
                  description: エンジン数
                particles:
                  type: integer
                  description: パーティクル数
                levels:
                  type: integer
                  description: 譜面数
                skins:
                  type: integer
                  description: スキン数
        isAdmin:
          type: boolean
          description: 管理者か否か。API経由の変更は不可で管理パネルからどうこうする
          default: false
        isDeleted:
          type: boolean
          description: アカウント削除フラグ(trueで削除済み扱い)
          default: false
    GetUserListResponse:
      title: GetUserListResponse
      type: object
      description: Struct of getList response
      properties:
        users:
          type: array
          description: サーバーに登録されたユーザー一覧
          items:
            $ref: '#/components/schemas/User'
        total:
          type: integer
          description: 合計アカウント数
        pages:
          type: integer
          description: 合計ページ数
      required:
        - users
        - total
        - pages
    Pickup:
      title: Pickup
      type: object
      description: おすすめ譜面のリクエスト(独自)
      properties:
        name:
          type: string
          description: 譜面ID
        order:
          type: integer
          description: 表示順序
          minimum: 10000
          maximum: 99999
      required:
        - name
        - order
    PostUploadResponse:
      title: PostUploadResponse
      type: object
      description: Struct of post upload response
      x-examples:
        success:
          message: success
          filename: LHSFemJ5DiiH4QpjbyuU.gz
        failed:
          message: failed
      properties:
        message:
          type: string
          description: Response status in human readable
          example: ok
          default: ok
        filename:
          type: string
          description: Created filename
      required:
        - message
    Upload:
      title: Upload
      type: object
      properties:
        file:
          type: string
          format: binary
        type:
          type: string
          enum:
            - SkinData
            - EngineThumbnail
            - EffectData
            - SkinTexture
            - ParticleData
            - EffectThumbnail
            - LevelBgm
            - BackgroundThumbnail
            - EngineConfiguration
            - LevelData
            - LevelPreview
            - ParticleTexture
            - BackgroundData
            - EngineData
            - BackgroundImage
            - LevelCover
            - SkinThumbnail
            - ParticleThumbnail
          maxLength: 50
          minLength: 1
      required:
        - file
        - type
    Search:
      title: Search
      type: object
      properties:
        options:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/SearchTextOption'
              - $ref: '#/components/schemas/SearchSliderOption'
              - $ref: '#/components/schemas/SearchToggleOption'
              - $ref: '#/components/schemas/SearchSelectOption'
      x-examples:
        example:
          options:
            - query: keywords
              name: '#KEYWORDS'
              type: text
              placeholder: '#KEYWORDS'
            - query: minLevel
              name: Minimum Level
              type: slider
              def: 5
              min: 1
              max: 30
              step: 1
              display: number
            - query: spoiler
              name: Spoiler
              type: toggle
              def: 0
            - query: length
              name: Length
              type: select
              def: 0
              values:
                - Short
                - Full
      description: It specifies what search query supported
    SearchTextOption:
      title: SearchTextOption
      type: object
      description: Text style search option
      properties:
        query:
          type: string
          description: query name
        name:
          type: string
          description: 'GUI name, if put in-app supported localizable text that startswith #, it gets localized.'
        type:
          type: string
          default: text
          enum:
            - text
          example: text
          description: option type (be autofilled)
        placeholder:
          type: string
          description: hint for input
      required:
        - query
        - name
        - type
        - placeholder
    SearchSliderOption:
      title: SearchSliderOption
      type: object
      x-examples:
        example:
          query: minLevel
          name: Minimum Level
          type: slider
          def: 5
          min: 1
          max: 30
          step: 1
          display: number
      description: Slider style search option
      properties:
        query:
          type: string
          description: query name
        name:
          type: string
          description: 'GUI name. if put in-app supported localizable text that startswith #, it gets localized.'
        type:
          type: string
          default: slider
          example: slider
          enum:
            - slider
          description: option type (be autofilled)
        def:
          type: integer
          minimum: 0
          description: default value
        min:
          type: integer
          minimum: 0
          description: minimum value
        max:
          type: integer
          minimum: 0
          description: maximum value
        step:
          type: integer
          minimum: 0
          description: step value per move
        display:
          type: string
          enum:
            - number
            - percentage
          example: number
          default: number
          description: display type (percentage or number)
      required:
        - query
        - name
        - type
        - def
        - min
        - max
        - step
        - display
    SearchToggleOption:
      title: SearchToggleOption
      type: object
      description: Toggle switch style search option
      x-examples:
        example:
          query: spoiler
          name: Spoiler
          type: toggle
          def: 0
      properties:
        query:
          type: string
          description: query name
        name:
          type: string
          description: 'GUI name. if put in-app supported localizable text that startswith #, it gets localized.'
        type:
          type: string
          default: toggle
          example: toggle
          enum:
            - toggle
          description: option type (be autofilled)
        def:
          type: integer
          minimum: 0
          maximum: 1
          example: 1
          default: 0
          description: default value true(1)/false(0)
      required:
        - query
        - name
        - type
        - def
    SearchSelectOption:
      title: SearchSelectOption
      type: object
      x-examples:
        example:
          query: length
          name: Length
          type: select
          def: 0
          values:
            - Short
            - Full
      description: Select button style search option
      properties:
        query:
          type: string
          description: query name
        name:
          type: string
          description: 'GUI name. if put in-app supported localizable text that startswith #, it gets localized.'
        type:
          type: string
          default: select
          enum:
            - select
          example: select
          description: option type (be autofilled)
        def:
          type: integer
          minimum: 0
          default: 0
          description: default selection index
        values:
          type: array
          description: selectable text elements array
          items:
            type: string
      required:
        - query
        - name
        - type
        - def
        - values
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  parameters:
    localization:
      name: localization
      in: query
      required: false
      schema:
        type: string
        example: en
        maxLength: 50
        minLength: 1
      description: It localizes response items if possible
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 10000
        example: 0
        default: 0
      description: Filters contents using pagination
    keywords:
      name: keywords
      in: query
      required: false
      schema:
        type: string
        maxLength: 300
        minLength: 0
        example: Chino
      description: 'Filter contents by specified keyword, in title and description'
      allowEmptyValue: true
    author:
      name: author
      in: query
      required: false
      schema:
        type: string
        minLength: 0
        maxLength: 100
        default: any
        example: any
      description: Filter contents by specified author
      allowEmptyValue: true
    rating_min:
      name: rating_min
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 1
        example: 1
      allowEmptyValue: true
      description: Filter level contents by minimum rating
    rating_max:
      name: rating_max
      in: query
      required: false
      schema:
        type: integer
        example: 50
        default: 50
        minLength: 1
        maxLength: 50
        minimum: 1
        maximum: 100
      description: Filter level contents by maximum rating
    order:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - desc
          - asc
          - '0'
          - '1'
        example: desc
        default: desc
        minLength: 0
        maxLength: 10
      allowEmptyValue: true
      description: It specifies sort direction
    length:
      name: length
      in: query
      required: false
      schema:
        type: string
        enum:
          - short
          - long
          - very_short
          - very_long
          - any
        maxLength: 10
        default: any
        example: any
        minLength: 0
      allowEmptyValue: true
      description: Filter level contents by specified length
    genre:
      name: genre
      in: query
      required: false
      schema:
        type: string
        enum:
          - general
          - anime
          - vocaloid
          - jpop
          - any
        default: any
        example: any
        minLength: 0
        maxLength: 20
      allowEmptyValue: true
      description: Filter contents by specified genre
    random:
      name: random
      in: query
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
        minimum: 0
        maximum: 1
        default: 0
      allowEmptyValue: true
      description: It shuffles response list
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - rating
          - bpm
          - notes
          - likes
          - mylists
          - updated_time
          - created_time
        maxLength: 20
        default: updated_time
        example: updated_time
      allowEmptyValue: true
      description: It sorts contents using specified method
    status:
      name: status
      in: query
      required: false
      schema:
        type: string
        enum:
          - played
          - unplayed
          - liked
          - mylisted
          - testing
          - any
        example: any
        maxLength: 20
        minLength: 1
        default: any
      allowEmptyValue: true
      description: Filters contents using specified status
tags:
  - name: accounts_backgrounds
  - name: accounts_effects
  - name: accounts_engines
  - name: accounts_info
  - name: accounts_levels
  - name: accounts_levels_specials
  - name: accounts_particles
  - name: accounts_skins
  - name: announces
  - name: default_backgrounds
  - name: default_effects
  - name: default_engines
  - name: default_info
  - name: default_levels
  - name: default_levels_specials
  - name: default_particles
  - name: default_skins
  - name: pickups
  - name: tests_backgrounds
  - name: tests_effects
  - name: tests_engines
  - name: tests_info
  - name: tests_levels
  - name: tests_particles
  - name: tests_skins
  - name: uploads
  - name: users
  - name: users_backgrounds
  - name: users_effects
  - name: users_engines
  - name: users_info
  - name: users_levels
  - name: users_particles
  - name: users_skins
security: []
