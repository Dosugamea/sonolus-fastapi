openapi: 3.0.0
info:
  contact:
    name: お窓
    url: https://discord.gg/KEfVkfC6Q9
  description: "Advanced Sonolus API server with adds many features (Python)  \nDevelopment\
    \ repository is [here](https://github.com/PurplePalette/sonolus-fastapi)\n\n###\
    \ Sonolus-Version\n- 0.5.10\n\n### Features\n- supports uploading every sonolus\
    \ contents\n- tests server for chart testing\n- users server for get levels only\
    \ from specific user\n- accounts server for make personal special features\n-\
    \ announces section to showing server maintenence infos\n- pickups section to\
    \ showing admin recommendation levels\n- random, flick-paradise, vote, mylist\
    \ and more!\n\n### Note\n- This file have many tags, since every generated files\
    \ were too big and needed to separate.\n- Actually many endpoints can inherit\
    \ another endpoints. it won't be big project.\n\n### Original comments\n- フロント\
    エンド専用のエンドポイントは一切持たずマイリストなどを含め全てのリクエストはSonolusアプリ内のリクエストと互換するAPI(つまり全部の処理がGETにな\
    る、きっも...)\n- ユーザー認証は以前同様に FirebaseAuthorizationでなんとかする。accountsエンドポイントはaccountKeyと\
    かいう概念使ってゴリ押しする、セキュリティ上よろしくないが...まぁゲームだしええやろ!"
  license:
    name: MIT
    url: https://opensource.org/licenses/mit-license.php
  termsOfService: https://discord.gg/KEfVkfC6Q9
  title: SweetPotato Server 3 API
  version: 0.5.10
servers:
- description: Local
  url: http://localhost:5000
tags:
- name: accounts_backgrounds
- name: accounts_effects
- name: accounts_engines
- name: accounts_info
- name: accounts_levels
- name: accounts_levels_specials
- name: accounts_particles
- name: accounts_skins
- name: announces
- name: default_backgrounds
- name: default_effects
- name: default_engines
- name: default_info
- name: default_levels
- name: default_levels_specials
- name: default_particles
- name: default_skins
- name: pickups
- name: tests_backgrounds
- name: tests_effects
- name: tests_engines
- name: tests_info
- name: tests_levels
- name: tests_particles
- name: tests_skins
- name: uploads
- name: users
- name: users_backgrounds
- name: users_effects
- name: users_engines
- name: users_info
- name: users_levels
- name: users_particles
- name: users_skins
paths:
  /backgrounds/list:
    get:
      description: |-
        It returns list of background infos registered in this server
        Also it can search using query params
      operationId: getBackgroundList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get background list
      tags:
      - default_backgrounds
  /backgrounds/{backgroundName}:
    delete:
      description: Delete specified background
      operationId: deleteBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete a background
      tags:
      - default_backgrounds
    get:
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      operationId: getBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get a background
      tags:
      - default_backgrounds
    patch:
      description: 指定された背景情報を編集します
      operationId: editBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit a background
      tags:
      - default_backgrounds
  /backgrounds:
    post:
      description: 指定された背景情報をサーバーに登録します
      operationId: addBackground
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add a background
      tags:
      - default_backgrounds
  /effects/list:
    get:
      description: |-
        It returns list of effect infos registered in this server
        Also it can search using query params
      operationId: getEffectList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get effect list
      tags:
      - default_effects
  /effects/{effectName}:
    delete:
      description: delete specified effect
      operationId: deleteEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete an effect
      tags:
      - default_effects
    get:
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      operationId: getEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get an effect
      tags:
      - default_effects
    patch:
      description: 指定されたeffectを編集します
      operationId: editEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit an effect
      tags:
      - default_effects
  /effects:
    post:
      description: 指定されたeffectをサーバーに登録します
      operationId: addEffect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add an effect
      tags:
      - default_effects
  /engines/list:
    get:
      description: |-
        It returns list of engine infos registered in this server
        Also it can search using query params
      operationId: getEngineList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get engine list
      tags:
      - default_engines
  /engines/{engineName}:
    delete:
      description: delete a engine
      operationId: deleteEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete an engine
      tags:
      - default_engines
    get:
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      operationId: getEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get an engine
      tags:
      - default_engines
    patch:
      description: 指定されたengineを編集します
      operationId: editEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit an engine
      tags:
      - default_engines
  /engines:
    post:
      description: 指定されたゲームエンジンをサーバーに登録します
      operationId: addEngine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add an engine
      tags:
      - default_engines
  /levels/announce:
    get:
      description: 現在のアナウンス一覧を取得します
      operationId: getAnnounceList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get announce infos
      tags:
      - default_levels_specials
  /levels/announce_{announceName}:
    get:
      description: 指定されたアナウンス情報を表示します
      operationId: getAnnounce
      parameters:
      - explode: false
        in: path
        name: announceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get an announce info
      tags:
      - default_levels_specials
  /levels/pickups:
    get:
      description: 管理者の指定したおすすめ譜面などを返すエンドポイント
      operationId: getPickups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get pickup levels
      tags:
      - default_levels_specials
  /levels/debut:
    get:
      description: 新規譜面作者の譜面のみを返すエンドポイント
      operationId: getFreshReleases
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get debut levels
      tags:
      - default_levels_specials
  /levels/list:
    get:
      description: |-
        It returns list of level infos registered in this server
        Also it can search using query params
      operationId: getLevelList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get level list
      tags:
      - default_levels
  /levels/{levelName}:
    delete:
      description: 指定されたレベルを削除します
      operationId: deleteLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete a level
      tags:
      - default_levels
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: getLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get a level
      tags:
      - default_levels
    patch:
      description: 指定されたlevelを編集します
      operationId: editLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit a level
      tags:
      - default_levels
  /levels:
    post:
      description: 指定された譜面情報をサーバーに登録します
      operationId: addLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add a level
      tags:
      - default_levels
  /particles/list:
    get:
      description: |-
        It returns list of particle infos registered in this server
        Also it can search using query params
      operationId: getParticleList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get particle list
      tags:
      - default_particles
  /particles/{particleName}:
    delete:
      description: 指定されたパーティクルを削除する
      operationId: deleteParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete a particle
      tags:
      - default_particles
    get:
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      operationId: getParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get a particle
      tags:
      - default_particles
    patch:
      description: 指定したparticleを編集します
      operationId: editParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit a particle
      tags:
      - default_particles
  /particles:
    post:
      description: 指定されたパーティクル情報をサーバーに登録します
      operationId: addParticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add a particle
      tags:
      - default_particles
  /skins/list:
    get:
      description: |-
        It returns list of skin infos registered in this server
        Also it can search using query params
      operationId: getSkinList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get skin list
      tags:
      - default_skins
  /skins/{skinName}:
    delete:
      description: 指定されたスキンを削除します
      operationId: deleteSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete a skin
      tags:
      - default_skins
    get:
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      operationId: getSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get a skin
      tags:
      - default_skins
    patch:
      description: 指定したskinを編集します
      operationId: editSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit a skin
      tags:
      - default_skins
  /skins:
    post:
      description: 指定されたスキン情報をサーバーに登録します
      operationId: addSkin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add a skin
      tags:
      - default_skins
  /info:
    get:
      description: |-
        It returns small list of all infos registered in this server
        (It should be trimed if the server has too many items)
      operationId: getServerInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get default server info
      tags:
      - default_info
  /users/{userId}:
    delete:
      description: 指定したユーザーを削除します
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete a user
      tags:
      - users
    get:
      description: 指定したユーザー情報を取得します
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "404":
          description: Not Found
      summary: Get a user
      tags:
      - users
    patch:
      description: 指定したuser情報を編集します
      operationId: editUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - Authorization: []
      summary: Edit a user
      tags:
      - users
  /users:
    post:
      description: Add specified new user to server
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      security:
      - Authorization: []
      summary: Add a user
      tags:
      - users
  /users/list:
    get:
      description: サーバーに登録されたユーザー一覧を返します
      operationId: getUserList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserListResponse'
          description: OK
      summary: Get user list
      tags:
      - users
  /tests/{testId}/info:
    get:
      description: テスト個別の情報一覧を返します
      operationId: getTestServerInfo
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get test server info
      tags:
      - tests_info
  /tests/{testId}/backgrounds/list:
    get:
      description: 譜面テスト用エンドポイント/ 背景一覧を返す(一般の背景リストと同じのが返される)
      operationId: getTestsBackgrounds
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get tests background list
      tags:
      - tests_backgrounds
  /tests/{testId}/backgrounds/{backgroundName}:
    get:
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      operationId: getBackgroundTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests background
      tags:
      - tests_backgrounds
  /tests/{testId}/effects/list:
    get:
      description: 譜面テスト用エンドポイント/ エフェクト一覧を返す(一般のエフェクトリストと同じのが返される)
      operationId: getTestsEffects
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get tests effects list
      tags:
      - tests_effects
  /tests/{testId}/effects/{effectName}:
    get:
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      operationId: getEffectTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests effect list
      tags:
      - tests_effects
  /tests/{testId}/engines/list:
    get:
      description: 譜面テスト用エンドポイント/ エンジン一覧を返す(一般のエンジンリストと同じのが返される)
      operationId: getTestsEngines
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get tests engine list
      tags:
      - tests_engines
  /tests/{testId}/engines/{engineName}:
    get:
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      operationId: getEngineTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests engine
      tags:
      - tests_engines
  /tests/{testId}/levels/list:
    get:
      description: 譜面テスト用エンドポイント/ 背景一覧を返す
      operationId: getTestsLevels
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get tests level list
      tags:
      - tests_levels
  /tests/{testId}/levels/{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: getLevelTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests level
      tags:
      - tests_levels
  /tests/{testId}/particles/list:
    get:
      description: 譜面テスト用エンドポイント/ パーティクル一覧を返す(一般の背景リストと同じのが返される)
      operationId: getTestsParticles
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get tests particle list
      tags:
      - tests_particles
  /tests/{testId}/particles/{particleName}:
    get:
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      operationId: getParticleTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests particle
      tags:
      - tests_particles
  /tests/{testId}/skins/{skinName}:
    get:
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      operationId: getSkinTest
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get tests skin
      tags:
      - tests_skins
  /tests/{testId}/skins/list:
    get:
      description: 譜面テスト用エンドポイント/ スキン一覧を返す(一般のスキンリストと同じのが返される)
      operationId: getTestsSkins
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get tests skin list
      tags:
      - tests_skins
  /users/{userId}/info:
    get:
      description: ユーザー個別の情報一覧を返します
      operationId: getUserServerInfo
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get user server info
      tags:
      - users_info
  /users/{userId}/backgrounds/list:
    get:
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      operationId: getUsersBackgrounds
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get users background list
      tags:
      - users_backgrounds
  /users/{userId}/backgrounds/{backgroundName}:
    get:
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      operationId: getUsersBackground
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users background
      tags:
      - users_backgrounds
  /users/{userId}/effects/list:
    get:
      description: ユーザー個別用エンドポイント/ エフェクト一覧を返す
      operationId: getUsersEffects
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get users effect list
      tags:
      - users_effects
  /users/{userId}/effects/{effectName}:
    get:
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      operationId: getUsersEffect
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users effect
      tags:
      - users_effects
  /users/{userId}/engines/list:
    get:
      description: ユーザー個別用エンドポイント/ エンジン一覧を返す
      operationId: getUsersEngines
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get users engine list
      tags:
      - users_engines
  /users/{userId}/engines/{engineName}:
    get:
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      operationId: getUsersEngine
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users engine
      tags:
      - users_engines
  /users/{userId}/levels/list:
    get:
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      operationId: getUsersLevels
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get users level list
      tags:
      - users_levels
  /users/{userId}/levels/{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: getUsersLevel
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users level
      tags:
      - users_levels
  /users/{userId}/particles/list:
    get:
      description: ユーザー個別用エンドポイント/ パーティクル一覧を返す
      operationId: getUsersParticles
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get users particle list
      tags:
      - users_particles
  /users/{userId}/particles/{particleName}:
    get:
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      operationId: getUsersParticle
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users particle
      tags:
      - users_particles
  /users/{userId}/skins/list:
    get:
      description: ユーザー個別用エンドポイント/ スキン一覧を返す
      operationId: getUsersSkins
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get users skin list
      tags:
      - users_skins
  /users/{userId}/skins/{skinName}:
    get:
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      operationId: getUsersSkin
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get users skin
      tags:
      - users_skins
  /accounts/{accountKey}/info:
    get:
      description: ユーザー個別の情報一覧を返します
      operationId: getAccountsServerInfo
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get account server info
      tags:
      - accounts_info
  /accounts/{accountKey}/backgrounds/list:
    get:
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      operationId: getAccountsBackgrounds
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get accounts background list
      tags:
      - accounts_backgrounds
  /accounts/{accountKey}/backgrounds/{backgroundName}:
    get:
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      operationId: getAccountsBackground
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts background
      tags:
      - accounts_backgrounds
  /accounts/{accountKey}/effects/list:
    get:
      description: ユーザー個別用エンドポイント/ エフェクト一覧を返す
      operationId: getAccountsEffects
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get accounts effect list
      tags:
      - accounts_effects
  /accounts/{accountKey}/effects/{effectName}:
    get:
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      operationId: getAccountsEffect
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts effect
      tags:
      - accounts_effects
  /accounts/{accountKey}/engines/list:
    get:
      description: ユーザー個別用エンドポイント/ エンジン一覧を返す
      operationId: getAccountsEngines
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get accounts engine list
      tags:
      - accounts_engines
  /accounts/{accountKey}/engines/{engineName}:
    get:
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      operationId: getAccountsEngine
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts engine
      tags:
      - accounts_engines
  /accounts/{accountKey}/levels/list:
    get:
      description: ユーザー個別用エンドポイント/ 譜面一覧を返す
      operationId: getAccountsLevels
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get accounts level list
      tags:
      - accounts_levels
  /accounts/{accountKey}/levels/{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: getAccountsLevel
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts level
      tags:
      - accounts_levels
  /accounts/{accountKey}/levels/pickups:
    get:
      description: 管理者の指定したおすすめ譜面などを返すエンドポイント
      operationId: getAccountPickupLevels
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get pickup levels
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/debut:
    get:
      description: 新規譜面作者の譜面のみを返すエンドポイント
      operationId: getAccountDebutLevels
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get debut levels
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/favorite_{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: favoriteLevel
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Favorite level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/unfavorite_{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: unfavoriteLevel
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Unfavorite level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/like_{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: rateLevel
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Like a level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/flick_{levelName}:
    get:
      description: 譜面のノーツ部分をゴリ押しでフリックのみに差し替えた特殊な譜面を取得する
      operationId: getFlickLevel
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get flick level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/rating_increase_{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: increaseRating
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Vote for increase rating on a level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/rating_decrease_{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: decreaseRating
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Vote for decrease rating on a level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/mylist:
    get:
      description: 対象の鍵を持つユーザーのマイリストを取得します
      operationId: getAccountMylist
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get mylist
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/random:
    get:
      description: ランダムな譜面を取得します
      operationId: getAccountRandom
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get a random level
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/announce:
    get:
      description: 現在のアナウンス一覧を取得します
      operationId: getAccountAnnounceList
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get announce list
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/levels/announce_{announceName}:
    get:
      description: 指定されたアナウンス情報を表示します
      operationId: getAccountAnnounce
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: announceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get announce
      tags:
      - accounts_levels_specials
  /accounts/{accountKey}/particles/list:
    get:
      description: ユーザー個別用エンドポイント/ パーティクル一覧を返す
      operationId: getAccountsParticles
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get accounts particle list
      tags:
      - accounts_particles
  /accounts/{accountKey}/particles/{particleName}:
    get:
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      operationId: getAccountsParticle
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts particle
      tags:
      - accounts_particles
  /accounts/{accountKey}/skins/list:
    get:
      description: ユーザー個別用エンドポイント/ スキン一覧を返す
      operationId: getAccountsSkins
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get accounts skin list
      tags:
      - accounts_skins
  /accounts/{accountKey}/skins/{skinName}:
    get:
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      operationId: getAccountsSkin
      parameters:
      - explode: false
        in: path
        name: accountKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get accounts skin
      tags:
      - accounts_skins
  /pickups:
    post:
      description: 譜面のピックアップを追加します
      operationId: addPickup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pickup'
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Add pickup
      tags:
      - pickups
  /pickups/{pickupName}:
    delete:
      description: 指定したピックアップを削除します
      operationId: deletePickup
      parameters:
      - explode: false
        in: path
        name: pickupName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pickup'
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete pickup
      tags:
      - pickups
    get:
      description: 指定されたIDのピックアップを取得して返す
      operationId: getPickup
      parameters:
      - explode: false
        in: path
        name: pickupName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get pickup
      tags:
      - pickups
  /pickups/list:
    get:
      description: ピックアップ中のデータ一覧を返す
      operationId: getPickupList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get pickup list
      tags:
      - announces
  /announces:
    post:
      description: 譜面のピックアップを追加します
      operationId: addAnnounce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Add announce
      tags:
      - announces
  /announces/list:
    get:
      description: アナウンス中のデータ一覧を返す
      operationId: getDefaultAnnounces
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    pageCount: 1
                    items:
                    - name: string
                      version: 1
                      rating: 1
                      engine:
                        name: string
                        version: 1
                        title: string
                        subtitle: string
                        author: string
                        thumbnail:
                          type: LevelData
                          hash: string
                          url: string
                        data:
                          type: LevelData
                          hash: string
                          url: string
                        configuration:
                          type: LevelData
                          hash: string
                          url: string
                        skin:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          texture:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                        background:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          image:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                        effect:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                        particle:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          texture:
                            type: LevelData
                            hash: string
                            url: string
                          userId: string
                          createdTime: 0
                          updatedTime: 0
                          description: string
                        createdTime: 0
                        updatedTime: 0
                        userId: string
                        description: string
                      useSkin:
                        useDefault: true
                        item:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          texture:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                      useBackground:
                        useDefault: true
                        item:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          image:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                      useEffect:
                        useDefault: true
                        item:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          createdTime: 0
                          updatedTime: 0
                          userId: string
                          description: string
                      useParticle:
                        useDefault: true
                        item:
                          name: string
                          version: 1
                          title: string
                          subtitle: string
                          author: string
                          thumbnail:
                            type: LevelData
                            hash: string
                            url: string
                          data:
                            type: LevelData
                            hash: string
                            url: string
                          texture:
                            type: LevelData
                            hash: string
                            url: string
                          userId: string
                          createdTime: 0
                          updatedTime: 0
                          description: string
                      title: string
                      artists: string
                      author: string
                      cover:
                        type: LevelData
                        hash: string
                        url: string
                      bgm:
                        type: LevelData
                        hash: string
                        url: string
                      preview:
                        type: LevelData
                        hash: string
                        url: string
                      data:
                        type: LevelData
                        hash: string
                        url: string
                      genre:
                      - general
                      public: false
                      userId: string
                      notes: 1
                      createdTime: 0
                      updatedTime: 0
                      description: string
                      length: 0
                    search:
                      options: []
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get announce list
      tags:
      - announces
  /announces/{announceName}:
    delete:
      description: 指定されたアナウンスを削除します
      operationId: deleteAnnounce
      parameters:
      - explode: false
        in: path
        name: announceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Delete announce
      tags:
      - announces
    get:
      description: 指定されたアナウンスデータを返す
      operationId: getDefaultAnnounce
      parameters:
      - explode: false
        in: path
        name: announceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
      summary: Get announce
      tags:
      - announces
    patch:
      description: 指定したアナウンスを編集します
      operationId: editAnnounce
      parameters:
      - explode: false
        in: path
        name: announceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Edit announce
      tags:
      - announces
  /upload:
    post:
      description: |-
        ファイルのアップロードを受け付ける
        (投稿から1時間以上使用されないファイルは自動削除したい)
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUploadResponse'
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "413":
          description: Request Entity Too Large
        "429":
          description: Too Many Requests
      security:
      - Authorization: []
      summary: Upload a file
      tags:
      - uploads
components:
  parameters:
    localization:
      description: It localizes response items if possible
      explode: true
      in: query
      name: localization
      required: false
      schema:
        example: en
        maxLength: 50
        minLength: 1
        type: string
      style: form
    page:
      description: It filters items for pagination if possible
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        example: 1
        maximum: 10000
        minimum: 0
        type: integer
      style: form
    keywords:
      description: It filters items for search from list if possible
      explode: true
      in: query
      name: keywords
      required: false
      schema:
        example: Redo
        maxLength: 300
        minLength: 1
        type: string
      style: form
  schemas:
    Level:
      description: |-
        A level provides a list of entities and powered by scripted behavior in engine, with skin, effect, background and particle, to create gameplay experience for players / It defines level for actual user play. It includes all data to play one level.
        https://wiki.sonolus.com/custom-server-specs/misc/level-item.html
      example:
        preview:
          type: LevelData
          hash: hash
          url: url
        notes: 5637377
        data:
          type: LevelData
          hash: hash
          url: url
        useBackground:
          item:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        rating: 81
        useSkin:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        bgm:
          type: LevelData
          hash: hash
          url: url
        description: description
        title: title
        mylists: 7061401
        cover:
          type: LevelData
          hash: hash
          url: url
        public: false
        engine:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        artists: artists
        useParticle:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        genre:
        - general
        createdTime: 0
        bpm: 5962
        likes: 2302135
        updatedTime: 0
        author: author
        length: 0
        version: 1
        userId: userId
        useEffect:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        name: name
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        rating:
          description: Difficulty of the level
          maximum: 1000
          minimum: 1
          title: rating
          type: integer
        engine:
          $ref: '#/components/schemas/Engine'
        useSkin:
          $ref: '#/components/schemas/Level_useSkin'
        useBackground:
          $ref: '#/components/schemas/Level_useBackground'
        useEffect:
          $ref: '#/components/schemas/Level_useEffect'
        useParticle:
          $ref: '#/components/schemas/Level_useParticle'
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        artists:
          description: artist names of original music
          maxLength: 100
          minLength: 1
          title: artists
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          title: author
          type: string
        cover:
          $ref: '#/components/schemas/SonolusResourceLocator'
        bgm:
          $ref: '#/components/schemas/SonolusResourceLocator'
        preview:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        genre:
          default:
          - general
          description: '独自要素: 楽曲のジャンル'
          example:
          - general
          items:
            type: string
          title: genre
          type: array
        public:
          default: false
          description: '独自要素: 楽曲が全体公開かどうか'
          title: public
          type: boolean
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
        length:
          default: 0
          description: '独自要素: 曲の長さ'
          example: 0
          maximum: 99999
          minimum: 0
          title: length
          type: integer
        bpm:
          description: BPM
          maximum: 10000
          minimum: 0
          title: bpm
          type: integer
        notes:
          default: 1
          description: '独自要素: 譜面内のノーツ数'
          maximum: 10000000
          minimum: 1
          title: notes
          type: integer
        likes:
          default: 0
          description: いいねされた回数
          maximum: 10000000
          minimum: 0
          title: likes
          type: integer
        mylists:
          default: 0
          description: マイリストされた回数
          maximum: 10000000
          minimum: 0
          title: mylists
          type: integer
      title: Level
      type: object
      x-examples: {}
    Skin:
      description: |-
        A skin provides graphic elements to levels / It defines graphics for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/skin-item.html
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        texture:
          type: LevelData
          hash: hash
          url: url
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          title: subtitle
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          title: author
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
      title: Skin
      type: object
      x-examples: {}
    Background:
      description: |-
        A background provides background graphical element to levels / It defines background used for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Background
      example:
        image:
          type: LevelData
          hash: hash
          url: url
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 50
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          title: subtitle
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          title: author
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        image:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
      title: Background
      type: object
      x-examples: {}
    Effect:
      description: |-
        An effect provides audio elements to levels / It defines audio effect used for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/effect-item.html
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 50
          minLength: 1
          title: subtitle
          type: string
        author:
          description: author of this content
          minLength: 1
          title: author
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
      title: Effect
      type: object
      x-examples: {}
    Particle:
      description: |-
        A particle provides particle effect elements to levels / It defines particle effect used for specific level
        https://wiki.sonolus.com/custom-server-specs/misc/particle-item.html
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        texture:
          type: LevelData
          hash: hash
          url: url
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          title: subtitle
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          title: author
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
      title: Particle
      type: object
      x-examples: {}
    Engine:
      description: |-
        An engine provides scripted behaviors to levels / It defines shared game engine for playing
        https://wiki.sonolus.com/custom-server-specs/misc/engine-item.html
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        configuration:
          type: LevelData
          hash: hash
          url: url
        author: author
        skin:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        title: title
        version: 1
        userId: userId
        background:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        subtitle: subtitle
        effect:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        name: name
        createdTime: 0
        particle:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          title: name
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          title: version
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          title: title
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          title: subtitle
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          title: author
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        configuration:
          $ref: '#/components/schemas/SonolusResourceLocator'
        skin:
          $ref: '#/components/schemas/Skin'
        background:
          $ref: '#/components/schemas/Background'
        effect:
          $ref: '#/components/schemas/Effect'
        particle:
          $ref: '#/components/schemas/Particle'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          title: userId
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
      title: Engine
      type: object
      x-examples: {}
    SonolusResourceLocator:
      description: |-
        Sonolus Resource Locator(SRL) is used in server endpoints in order for Sonolus to locate a resource.
        All resources must be gzip compressed.
        https://wiki.sonolus.com/custom-server-specs/misc/srl.html
      example:
        type: LevelData
        hash: hash
        url: url
      properties:
        type:
          description: When specify type together with hash uniquely identifies a
            resource.
          enum:
          - SkinData
          - EngineThumbnail
          - EffectData
          - SkinTexture
          - ParticleData
          - EffectThumbnail
          - LevelBgm
          - BackgroundThumbnail
          - EngineConfiguration
          - LevelData
          - LevelPreview
          - ParticleTexture
          - BackgroundData
          - EngineData
          - BackgroundImage
          - LevelCover
          - SkinThumbnail
          - ParticleThumbnail
          example: LevelData
          maxLength: 50
          minLength: 1
          title: type
          type: string
        hash:
          description: Hash is calculated using SHA1 on the resource file
          maxLength: 100
          minLength: 1
          title: hash
          type: string
        url:
          description: If url starts with character /, it will be treated as relative
            path to server address.
          maxLength: 500
          minLength: 1
          title: url
          type: string
      title: SonolusResourceLocator
      type: object
      x-examples:
        example:
          type: EffectData
          hash: addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
          url: /repository/EffectData/addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
    GetBackgroundListResponse:
      description: |-
        Response struct of getBackgroundList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-backgrounds-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Background'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetBackgroundListResponse
      type: object
      x-examples: {}
    GetEffectListResponse:
      description: |-
        Response struct of getEffectList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-effects-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Effect'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetEffectListResponse
      type: object
      x-examples: {}
    GetEngineListResponse:
      description: |-
        Response struct of getEngineList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-engines-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Engine'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetEngineListResponse
      type: object
      x-examples: {}
    GetLevelListResponse:
      description: |-
        Response struct of getLevelList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-levels-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Level'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetLevelListResponse
      type: object
      x-examples: {}
    GetParticleListResponse:
      description: |-
        Response struct of getParticleList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-particles-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Particle'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetParticleListResponse
      type: object
      x-examples: {}
    GetSkinListResponse:
      description: |-
        Response struct of getSkinList
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-skins-list.html
      example:
        pageCount: 1
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          title: pageCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Skin'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - pageCount
      - search
      title: GetSkinListResponse
      type: object
      x-examples: {}
    GetLevelResponse:
      description: |-
        Response struct of getLevel
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-levels-name.html
      example:
        item:
          preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
        description: description
        recommended:
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
      properties:
        item:
          $ref: '#/components/schemas/Level'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Level'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetLevelResponse
      type: object
      x-examples: {}
    GetBackgroundResponse:
      description: |-
        Response struct of getBackground
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-backgrounds-name.html
      example:
        item:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Background'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Background'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetBackgroundResponse
      type: object
      x-examples: {}
    GetEffectResponse:
      description: |-
        Response struct of getEffect
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-effects-name.html
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Effect'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Effect'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetEffectResponse
      type: object
      x-examples: {}
    GetEngineResponse:
      description: |-
        Response struct of getEngine
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-engines-name.html
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Engine'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Engine'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetEngineResponse
      type: object
      x-examples: {}
    GetParticleResponse:
      description: |-
        Response struct of getParticle
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-particles-name.html
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Particle'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Particle'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetParticleResponse
      type: object
      x-examples: {}
    GetSkinResponse:
      description: |-
        Response struct of getSkin
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-skins-name.html
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Skin'
        description:
          minLength: 1
          title: description
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Skin'
          title: recommended
          type: array
      required:
      - description
      - item
      - recommended
      title: GetSkinResponse
      type: object
      x-examples: {}
    ServerInfo:
      description: |-
        Response struct of getServerInfo
        https://wiki.sonolus.com/custom-server-specs/endpoints/get-info.html
      example:
        skins:
          search:
            options:
            - ""
            - ""
          items:
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        effects:
          search:
            options:
            - ""
            - ""
          items:
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        engines:
          search:
            options:
            - ""
            - ""
          items:
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
        backgrounds:
          search:
            options:
            - ""
            - ""
          items:
          - image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          - image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        particles:
          search:
            options:
            - ""
            - ""
          items:
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          - updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        levels:
          search:
            options:
            - ""
            - ""
          items:
          - preview:
              type: LevelData
              hash: hash
              url: url
            notes: 5637377
            data:
              type: LevelData
              hash: hash
              url: url
            useBackground:
              item:
                image:
                  type: LevelData
                  hash: hash
                  url: url
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            rating: 81
            useSkin:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            bgm:
              type: LevelData
              hash: hash
              url: url
            description: description
            title: title
            mylists: 7061401
            cover:
              type: LevelData
              hash: hash
              url: url
            public: false
            engine:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              configuration:
                type: LevelData
                hash: hash
                url: url
              author: author
              skin:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              description: description
              title: title
              version: 1
              userId: userId
              background:
                image:
                  type: LevelData
                  hash: hash
                  url: url
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              subtitle: subtitle
              effect:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              name: name
              createdTime: 0
              particle:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
            artists: artists
            useParticle:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            genre:
            - general
            createdTime: 0
            bpm: 5962
            likes: 2302135
            updatedTime: 0
            author: author
            length: 0
            version: 1
            userId: userId
            useEffect:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            name: name
          - preview:
              type: LevelData
              hash: hash
              url: url
            notes: 5637377
            data:
              type: LevelData
              hash: hash
              url: url
            useBackground:
              item:
                image:
                  type: LevelData
                  hash: hash
                  url: url
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            rating: 81
            useSkin:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            bgm:
              type: LevelData
              hash: hash
              url: url
            description: description
            title: title
            mylists: 7061401
            cover:
              type: LevelData
              hash: hash
              url: url
            public: false
            engine:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              configuration:
                type: LevelData
                hash: hash
                url: url
              author: author
              skin:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              description: description
              title: title
              version: 1
              userId: userId
              background:
                image:
                  type: LevelData
                  hash: hash
                  url: url
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              subtitle: subtitle
              effect:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              name: name
              createdTime: 0
              particle:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
            artists: artists
            useParticle:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                texture:
                  type: LevelData
                  hash: hash
                  url: url
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            genre:
            - general
            createdTime: 0
            bpm: 5962
            likes: 2302135
            updatedTime: 0
            author: author
            length: 0
            version: 1
            userId: userId
            useEffect:
              item:
                updatedTime: 0
                thumbnail:
                  type: LevelData
                  hash: hash
                  url: url
                data:
                  type: LevelData
                  hash: hash
                  url: url
                author: author
                subtitle: subtitle
                name: name
                createdTime: 0
                description: description
                title: title
                version: 1
                userId: userId
              useDefault: true
            name: name
      properties:
        levels:
          $ref: '#/components/schemas/ServerInfo_levels'
        skins:
          $ref: '#/components/schemas/ServerInfo_skins'
        backgrounds:
          $ref: '#/components/schemas/ServerInfo_backgrounds'
        effects:
          $ref: '#/components/schemas/ServerInfo_effects'
        particles:
          $ref: '#/components/schemas/ServerInfo_particles'
        engines:
          $ref: '#/components/schemas/ServerInfo_engines'
      required:
      - backgrounds
      - effects
      - engines
      - levels
      - particles
      - skins
      title: ServerInfo
      type: object
      x-examples:
        example-1:
          levels:
            items:
            - name: string
              version: 1
              rating: 1
              engine:
                name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                configuration:
                  type: LevelData
                  hash: string
                  url: string
                skin:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                background:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  image:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                effect:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
                particle:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  userId: string
                  createdTime: 0
                  updatedTime: 0
                  description: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
              useSkin:
                useDefault: true
                item:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
              useBackground:
                useDefault: true
                item:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  image:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
              useEffect:
                useDefault: true
                item:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  createdTime: 0
                  updatedTime: 0
                  userId: string
                  description: string
              useParticle:
                useDefault: true
                item:
                  name: string
                  version: 1
                  title: string
                  subtitle: string
                  author: string
                  thumbnail:
                    type: LevelData
                    hash: string
                    url: string
                  data:
                    type: LevelData
                    hash: string
                    url: string
                  texture:
                    type: LevelData
                    hash: string
                    url: string
                  userId: string
                  createdTime: 0
                  updatedTime: 0
                  description: string
              title: string
              artists: string
              author: string
              cover:
                type: LevelData
                hash: string
                url: string
              bgm:
                type: LevelData
                hash: string
                url: string
              preview:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              genre: general
              public: false
              userId: string
              notes: 1
              createdTime: 0
              updatedTime: 0
              description: string
              length: 0
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
          skins:
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              texture:
                type: LevelData
                hash: string
                url: string
              createdTime: 0
              updatedTime: 0
              userId: string
              description: string
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
          backgrounds:
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              image:
                type: LevelData
                hash: string
                url: string
              createdTime: 0
              updatedTime: 0
              userId: string
              description: string
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
          effects:
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              createdTime: 0
              updatedTime: 0
              userId: string
              description: string
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
          particles:
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              texture:
                type: LevelData
                hash: string
                url: string
              userId: string
              createdTime: 0
              updatedTime: 0
              description: string
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
          engines:
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              configuration:
                type: LevelData
                hash: string
                url: string
              skin:
                name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                texture:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
              background:
                name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                image:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
              effect:
                name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                createdTime: 0
                updatedTime: 0
                userId: string
                description: string
              particle:
                name: string
                version: 1
                title: string
                subtitle: string
                author: string
                thumbnail:
                  type: LevelData
                  hash: string
                  url: string
                data:
                  type: LevelData
                  hash: string
                  url: string
                texture:
                  type: LevelData
                  hash: string
                  url: string
                userId: string
                createdTime: 0
                updatedTime: 0
                description: string
              createdTime: 0
              updatedTime: 0
              userId: string
              description: string
            search:
              options:
              - query: string
                name: string
                type: text
                placeholder: string
    User:
      description: ユーザー情報型
      example:
        updatedTime: 0
        total:
          favorites: 0
          plays: 0
          publish:
            skins: 9
            effects: 5
            engines: 5
            backgrounds: 1
            particles: 2
            levels: 7
          likes: 0
        isDeleted: false
        description: description
        createdTime: 0
        testId: htcckfcn
        isAdmin: false
        userId: gz6xQrm79IN4BiQag78sQqYWYlC3
        accountKey: super_secret_key
      properties:
        userId:
          default: gz6xQrm79IN4BiQag78sQqYWYlC3
          description: FirebaseDatabase上のユーザーID
          example: gz6xQrm79IN4BiQag78sQqYWYlC3
          maxLength: 30
          minLength: 1
          title: userId
          type: string
        testId:
          default: htcckfcn
          description: テスト用サーバーのエンドポイント
          example: htcckfcn
          maxLength: 8
          minLength: 8
          title: testId
          type: string
        accountKey:
          default: super_secret_key
          description: アカウント鍵
          example: super_secret_key
          title: accountKey
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          title: description
          type: string
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          title: createdTime
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          title: updatedTime
          type: integer
        total:
          $ref: '#/components/schemas/User_total'
        isAdmin:
          default: false
          description: 管理者か否か。API経由の変更は不可で管理パネルからどうこうする
          title: isAdmin
          type: boolean
        isDeleted:
          default: false
          description: アカウント削除フラグ(trueで削除済み扱い)
          title: isDeleted
          type: boolean
      title: User
      type: object
      x-examples:
        example:
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
          testId: htcckfcn
          accountKey: super_secret_key
          description: string
          createdTime: 0
          updatedTime: 0
          total:
            likes: 0
            plays: 0
            favorites: 0
            publish:
              backgrounds: 0
              effects: 0
              engines: 0
              particles: 0
              levels: 0
              skins: 0
          isAdmin: false
          isDeleted: false
    GetUserListResponse:
      description: Struct of getList response
      example:
        total: 0
        pages: 6
        users:
        - updatedTime: 0
          total:
            favorites: 0
            plays: 0
            publish:
              skins: 9
              effects: 5
              engines: 5
              backgrounds: 1
              particles: 2
              levels: 7
            likes: 0
          isDeleted: false
          description: description
          createdTime: 0
          testId: htcckfcn
          isAdmin: false
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
          accountKey: super_secret_key
        - updatedTime: 0
          total:
            favorites: 0
            plays: 0
            publish:
              skins: 9
              effects: 5
              engines: 5
              backgrounds: 1
              particles: 2
              levels: 7
            likes: 0
          isDeleted: false
          description: description
          createdTime: 0
          testId: htcckfcn
          isAdmin: false
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
          accountKey: super_secret_key
      properties:
        users:
          description: サーバーに登録されたユーザー一覧
          items:
            $ref: '#/components/schemas/User'
          title: users
          type: array
        total:
          description: 合計アカウント数
          title: total
          type: integer
        pages:
          description: 合計ページ数
          title: pages
          type: integer
      required:
      - pages
      - total
      - users
      title: GetUserListResponse
      type: object
    Pickup:
      description: おすすめ譜面のリクエスト(独自)
      example:
        levelName: levelName
        order: 17207
      properties:
        levelName:
          description: 譜面ID
          title: levelName
          type: string
        order:
          description: 表示順序
          maximum: 99999
          minimum: 10000
          title: order
          type: integer
      required:
      - levelName
      - order
      title: Pickup
      type: object
    Announce:
      description: お知らせ情報のリクエスト
      example:
        date: date
        subtitle: subtitle
        resources:
          level: level
          icon: icon
          bgm: bgm
        title: title
        body: body
        announceName: announceName
      properties:
        announceName:
          description: アナウンスID(取得するときは接頭辞にannounce_が入る)
          title: announceName
          type: string
        title:
          description: お知らせのタイトル
          title: title
          type: string
        subtitle:
          description: お知らせの要約(Levelでいうartistsエリア)
          title: subtitle
          type: string
        date:
          description: お知らせの作成日(Levelでいう譜面作者エリア)
          title: date
          type: string
        body:
          description: お知らせの内容
          title: body
          type: string
        resources:
          $ref: '#/components/schemas/Announce_resources'
      required:
      - announceName
      - body
      - date
      - subtitle
      - title
      title: Announce
      type: object
    PostUploadResponse:
      description: Struct of post upload response
      example:
        filename: filename
        message: message
      properties:
        message:
          description: Response status in human readable
          title: message
          type: string
        filename:
          title: filename
          type: string
      required:
      - message
      title: PostUploadResponse
      type: object
      x-examples:
        success:
          value:
            message: File saved.
            filename: LHSFemJ5DiiH4QpjbyuU.json
        failed:
          value:
            message: File validation failed.
    Upload:
      properties:
        file:
          format: binary
          type: string
        type:
          enum:
          - SkinData
          - EngineThumbnail
          - EffectData
          - SkinTexture
          - ParticleData
          - EffectThumbnail
          - LevelBgm
          - BackgroundThumbnail
          - EngineConfiguration
          - LevelData
          - LevelPreview
          - ParticleTexture
          - BackgroundData
          - EngineData
          - BackgroundImage
          - LevelCover
          - SkinThumbnail
          - ParticleThumbnail
          type: string
      title: Upload
      type: object
    Search:
      description: It specifies what search query supported
      example:
        options:
        - ""
        - ""
      properties:
        options:
          items:
            anyOf:
            - $ref: '#/components/schemas/SearchTextOption'
            - $ref: '#/components/schemas/SearchSliderOption'
            - $ref: '#/components/schemas/SearchToggleOption'
            - $ref: '#/components/schemas/SearchSelectOption'
          title: options
          type: array
      title: Search
      type: object
      x-examples:
        example:
          options:
          - query: keywords
            name: '#KEYWORDS'
            type: text
            placeholder: '#KEYWORDS'
          - query: minLevel
            name: Minimum Level
            type: slider
            def: 5
            min: 1
            max: 30
            step: 1
            display: number
          - query: spoiler
            name: Spoiler
            type: toggle
            def: 0
          - query: length
            name: Length
            type: select
            def: 0
            values:
            - Short
            - Full
    SearchTextOption:
      description: Text style search option
      properties:
        query:
          description: query name
          title: query
          type: string
        name:
          description: 'GUI name, if put in-app supported localizable text that startswith
            #, it gets localized.'
          title: name
          type: string
        type:
          default: text
          description: option type (be autofilled)
          enum:
          - text
          example: text
          title: type
          type: string
        placeholder:
          description: hint for input
          title: placeholder
          type: string
      required:
      - name
      - placeholder
      - query
      - type
      title: SearchTextOption
      type: object
    SearchSliderOption:
      description: Slider style search option
      properties:
        query:
          description: query name
          title: query
          type: string
        name:
          description: 'GUI name. if put in-app supported localizable text that startswith
            #, it gets localized.'
          title: name
          type: string
        type:
          default: slider
          description: option type (be autofilled)
          enum:
          - slider
          example: slider
          title: type
          type: string
        def:
          description: default value
          minimum: 0
          title: def
          type: integer
        min:
          description: minimum value
          minimum: 0
          title: min
          type: integer
        max:
          description: maximum value
          minimum: 0
          title: max
          type: integer
        step:
          description: step value per move
          minimum: 0
          title: step
          type: integer
        display:
          default: number
          description: display type (percentage or number)
          enum:
          - number
          - percentage
          example: number
          title: display
          type: string
      required:
      - def
      - display
      - max
      - min
      - name
      - query
      - step
      - type
      title: SearchSliderOption
      type: object
      x-examples:
        example:
          query: minLevel
          name: Minimum Level
          type: slider
          def: 5
          min: 1
          max: 30
          step: 1
          display: number
    SearchToggleOption:
      description: Toggle switch style search option
      properties:
        query:
          description: query name
          title: query
          type: string
        name:
          description: 'GUI name. if put in-app supported localizable text that startswith
            #, it gets localized.'
          title: name
          type: string
        type:
          default: toggle
          description: option type (be autofilled)
          enum:
          - toggle
          example: toggle
          title: type
          type: string
        def:
          default: 0
          description: default value true(1)/false(0)
          example: 1
          maximum: 1
          minimum: 0
          title: def
          type: integer
      required:
      - def
      - name
      - query
      - type
      title: SearchToggleOption
      type: object
      x-examples:
        example:
          query: spoiler
          name: Spoiler
          type: toggle
          def: 0
    SearchSelectOption:
      description: Select button style search option
      properties:
        query:
          description: query name
          title: query
          type: string
        name:
          description: 'GUI name. if put in-app supported localizable text that startswith
            #, it gets localized.'
          title: name
          type: string
        type:
          default: select
          description: option type (be autofilled)
          enum:
          - select
          example: select
          title: type
          type: string
        def:
          default: 0
          description: default selection index
          minimum: 0
          title: def
          type: integer
        values:
          description: selectable text elements array
          items:
            type: string
          title: values
          type: array
      required:
      - def
      - name
      - query
      - type
      - values
      title: SearchSelectOption
      type: object
      x-examples:
        example:
          query: length
          name: Length
          type: select
          def: 0
          values:
          - Short
          - Full
    Level_useSkin:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          default: true
          description: If true (recommended), default resource specified by the engine
            will be used.
          title: useDefault
          type: boolean
        item:
          $ref: '#/components/schemas/Skin'
      title: Level_useSkin
      type: object
    Level_useBackground:
      example:
        item:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          default: true
          description: If true (recommended), default resource specified by the engine
            will be used.
          title: useDefault
          type: boolean
        item:
          $ref: '#/components/schemas/Background'
      title: Level_useBackground
      type: object
    Level_useEffect:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          default: true
          description: If true (recommended), default resource specified by the engine
            will be used.
          title: useDefault
          type: boolean
        item:
          $ref: '#/components/schemas/Effect'
      title: Level_useEffect
      type: object
    Level_useParticle:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          default: true
          description: If true (recommended), default resource specified by the engine
            will be used.
          title: useDefault
          type: boolean
        item:
          $ref: '#/components/schemas/Particle'
      title: Level_useParticle
      type: object
    ServerInfo_levels:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
        - preview:
            type: LevelData
            hash: hash
            url: url
          notes: 5637377
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          mylists: 7061401
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          genre:
          - general
          createdTime: 0
          bpm: 5962
          likes: 2302135
          updatedTime: 0
          author: author
          length: 0
          version: 1
          userId: userId
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
      properties:
        items:
          items:
            $ref: '#/components/schemas/Level'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_levels
      type: object
    ServerInfo_skins:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Skin'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_skins
      type: object
    ServerInfo_backgrounds:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Background'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_backgrounds
      type: object
    ServerInfo_effects:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Effect'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_effects
      type: object
    ServerInfo_particles:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Particle'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_particles
      type: object
    ServerInfo_engines:
      example:
        search:
          options:
          - ""
          - ""
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Engine'
          title: items
          type: array
        search:
          $ref: '#/components/schemas/Search'
      required:
      - items
      - search
      title: ServerInfo_engines
      type: object
    User_total_publish:
      description: 公開した個数
      example:
        skins: 9
        effects: 5
        engines: 5
        backgrounds: 1
        particles: 2
        levels: 7
      properties:
        backgrounds:
          description: 背景数
          title: backgrounds
          type: integer
        effects:
          description: 効果音数
          title: effects
          type: integer
        engines:
          description: エンジン数
          title: engines
          type: integer
        particles:
          description: パーティクル数
          title: particles
          type: integer
        levels:
          description: 譜面数
          title: levels
          type: integer
        skins:
          description: スキン数
          title: skins
          type: integer
      title: User_total_publish
      type: object
    User_total:
      description: 各種統計
      example:
        favorites: 0
        plays: 0
        publish:
          skins: 9
          effects: 5
          engines: 5
          backgrounds: 1
          particles: 2
          levels: 7
        likes: 0
      properties:
        likes:
          default: 0
          description: いいねされた回数
          example: 0
          maximum: 10000000
          minimum: 0
          title: likes
          type: integer
        plays:
          default: 0
          description: プレイした回数
          example: 0
          maximum: 10000000
          minimum: 0
          title: plays
          type: integer
        favorites:
          default: 0
          description: お気に入りした回数
          example: 0
          maximum: 10000000
          minimum: 0
          title: favorites
          type: integer
        publish:
          $ref: '#/components/schemas/User_total_publish'
      title: User_total
      type: object
    Announce_resources:
      description: アイコンとBGM(任意)
      example:
        level: level
        icon: icon
        bgm: bgm
      properties:
        icon:
          description: アイコン画像URL(指定したらあとはAPI内部でよしなにしてくれる...はず)
          title: icon
          type: string
        bgm:
          description: BGMのURL(指定したらAPI内部でよしなに)
          title: bgm
          type: string
        level:
          description: レベルIDを指定した場合、指定された譜面がDLされる(その場合BGMパラメータは無視される)
          title: level
          type: string
      title: Announce_resources
      type: object
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
