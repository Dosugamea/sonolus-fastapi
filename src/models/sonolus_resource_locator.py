# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class SonolusResourceLocator(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SonolusResourceLocator - a model defined in OpenAPI

        type: The type of this SonolusResourceLocator [Optional].
        hash: The hash of this SonolusResourceLocator [Optional].
        url: The url of this SonolusResourceLocator [Optional].
    """

    type: Optional[str] = None
    hash: Optional[str] = None
    url: Optional[str] = None

    @validator("type")
    def type_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("type")
    def type_max_length(cls, value):
        assert len(value) <= 50
        return value

    @validator("hash")
    def hash_min_length(cls, value):
        assert len(value) >= 0
        return value

    @validator("hash")
    def hash_max_length(cls, value):
        assert len(value) <= 100
        return value

    @validator("url")
    def url_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("url")
    def url_max_length(cls, value):
        assert len(value) <= 500
        return value

SonolusResourceLocator.update_forward_refs()
