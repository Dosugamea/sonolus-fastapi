# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class AddBackgroundRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AddBackgroundRequest - a model defined in OpenAPI

        title: The title of this AddBackgroundRequest.
        titleEn: The titleEn of this AddBackgroundRequest [Optional].
        subtitle: The subtitle of this AddBackgroundRequest.
        subtitleEn: The subtitleEn of this AddBackgroundRequest [Optional].
        author: The author of this AddBackgroundRequest.
        authorEn: The authorEn of this AddBackgroundRequest [Optional].
        description: The description of this AddBackgroundRequest.
        descriptionEn: The descriptionEn of this AddBackgroundRequest [Optional].
        thumbnail: The thumbnail of this AddBackgroundRequest.
        data: The data of this AddBackgroundRequest.
        image: The image of this AddBackgroundRequest.
        configuration: The configuration of this AddBackgroundRequest.
    """

    title: str
    titleEn: Optional[str] = None
    subtitle: str
    subtitleEn: Optional[str] = None
    author: str
    authorEn: Optional[str] = None
    description: str
    descriptionEn: Optional[str] = None
    thumbnail: str
    data: str
    image: str
    configuration: str

    @validator("title")
    def title_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("title")
    def title_max_length(cls, value):
        assert len(value) <= 100
        return value

    @validator("titleEn")
    def titleEn_max_length(cls, value):
        assert len(value) <= 100
        return value

    @validator("subtitle")
    def subtitle_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("subtitle")
    def subtitle_max_length(cls, value):
        assert len(value) <= 100
        return value

    @validator("subtitleEn")
    def subtitleEn_max_length(cls, value):
        assert len(value) <= 100
        return value

    @validator("author")
    def author_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("author")
    def author_max_length(cls, value):
        assert len(value) <= 50
        return value

    @validator("authorEn")
    def authorEn_max_length(cls, value):
        assert len(value) <= 50
        return value

    @validator("description")
    def description_max_length(cls, value):
        assert len(value) <= 3000
        return value

    @validator("descriptionEn")
    def descriptionEn_max_length(cls, value):
        assert len(value) <= 3000
        return value

AddBackgroundRequest.update_forward_refs()
