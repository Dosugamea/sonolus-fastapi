{
  "openapi": "3.0.0",
  "info": {
    "title": "SweetPotato Server 3 API",
    "version": "1.0",
    "description": "Sonolusの基本APIを大幅に捻じ曲げるサーバー\nフロントエンド専用のエンドポイントは一切持たず\nマイリストなどを含め全てのリクエストはSonolusアプリ内のリクエストと互換(つまり全部GETきっも)\n\nユーザー認証は以前同様に FirebaseAuthorizationでなんとかする。\n(実際にはaccountKeyとかいう概念で認証をスキップできちゃうが...まぁゲームだしええやろ)\n\n変更点: /levels/{levelName} へのPOST を /levels に変更、一般的ではないエンドポイントだったので",
    "contact": {
      "name": "お窓",
      "url": "https://discord.gg/KEfVkfC6Q9"
    },
    "termsOfService": "https://discord.gg/KEfVkfC6Q9",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/mit-license.php"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local"
    }
  ],
  "paths": {
    "/backgrounds/list": {
      "get": {
        "summary": "Get background list",
        "tags": [
          "backgrounds"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundListResponse"
                }
              }
            }
          }
        },
        "operationId": "getBackgroundList",
        "description": "It returns list of background infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/backgrounds/{backgroundName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "backgroundName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get background",
        "tags": [
          "backgrounds"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getBackground",
        "description": "It returns specified background info\nIt will raise 404 if the background is not registered in this server"
      },
      "patch": {
        "summary": "Edit background",
        "operationId": "editBackground",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定された背景情報を編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Background"
              }
            }
          }
        },
        "tags": [
          "backgrounds"
        ]
      },
      "delete": {
        "summary": "Delete background",
        "operationId": "deleteBackground",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete specified background",
        "tags": [
          "backgrounds"
        ]
      }
    },
    "/backgrounds": {
      "parameters": [],
      "post": {
        "summary": "Add background",
        "operationId": "addBackground",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定された背景情報をサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Background"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "backgrounds"
        ]
      }
    },
    "/effects/list": {
      "get": {
        "summary": "Get effect list",
        "tags": [
          "effects"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectListResponse"
                }
              }
            }
          }
        },
        "operationId": "getEffectList",
        "description": "It returns list of effect infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/effects/{effectName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "effectName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get effect",
        "tags": [
          "effects"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getEffect",
        "description": "It returns specified effect info\nIt will raise 404 if the effect is not registered in this server"
      },
      "patch": {
        "summary": "Edit effect",
        "operationId": "editEffect",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定されたeffectを編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Effect"
              }
            }
          }
        },
        "tags": [
          "effects"
        ]
      },
      "delete": {
        "summary": "Delete effect",
        "operationId": "deleteEffect",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "delete specified effect",
        "tags": [
          "effects"
        ]
      }
    },
    "/effects": {
      "parameters": [],
      "post": {
        "summary": "Add effect",
        "operationId": "addEffect",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定されたeffectをサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Effect"
              }
            }
          }
        },
        "tags": [
          "effects"
        ]
      }
    },
    "/engines/list": {
      "get": {
        "summary": "Get engine list",
        "tags": [
          "engines"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineListResponse"
                }
              }
            }
          }
        },
        "operationId": "getEngineList",
        "description": "It returns list of engine infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/engines/{engineName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "engineName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get engine",
        "tags": [
          "engines"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getEngine",
        "description": "It returns specified engine info\nIt will raise 404 if the engine is not registered in this server"
      },
      "patch": {
        "summary": "Edit engine",
        "operationId": "editEngine",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定されたengineを編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Engine"
              }
            }
          }
        },
        "tags": [
          "engines"
        ]
      },
      "delete": {
        "summary": "Delete Engine",
        "operationId": "deleteEngine",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "engines"
        ],
        "description": "delete a engine"
      }
    },
    "/engines": {
      "parameters": [],
      "post": {
        "summary": "Add engine",
        "operationId": "addEngine",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定されたゲームエンジンをサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Engine"
              }
            }
          }
        },
        "tags": [
          "engines"
        ]
      }
    },
    "/levels/list": {
      "get": {
        "summary": "Get level list",
        "tags": [
          "levels"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getLevelList",
        "description": "It returns list of level infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/levels/{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get level",
        "tags": [
          "levels"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server"
      },
      "patch": {
        "summary": "Edit level",
        "operationId": "editLevel",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定されたlevelを編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Level"
              }
            }
          }
        },
        "tags": [
          "levels"
        ]
      },
      "delete": {
        "summary": "Delete a level",
        "operationId": "deleteLevel",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "指定されたレベルを削除します",
        "tags": [
          "levels"
        ]
      }
    },
    "/levels": {
      "parameters": [],
      "post": {
        "summary": "Add level",
        "operationId": "addLevel",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定された譜面情報をサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Level"
              }
            }
          }
        },
        "tags": [
          "levels"
        ]
      }
    },
    "/particles/list": {
      "get": {
        "summary": "Get particle list",
        "tags": [
          "particles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleListResponse"
                }
              }
            }
          }
        },
        "operationId": "getParticleList",
        "description": "It returns list of particle infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/particles/{particleName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "particleName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get particle",
        "tags": [
          "particles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getParticle",
        "description": "It returns specified particle info\nIt will raise 404 if the particle is not registered in this server"
      },
      "patch": {
        "summary": "Edit particle",
        "operationId": "editParticle",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定したparticleを編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Particle"
              }
            }
          }
        },
        "tags": [
          "particles"
        ]
      },
      "delete": {
        "summary": "Delete particle",
        "operationId": "deleteParticle",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "particles"
        ],
        "description": "指定されたパーティクルを削除する"
      }
    },
    "/particles": {
      "parameters": [],
      "post": {
        "summary": "Add particle",
        "operationId": "addParticle",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定されたパーティクル情報をサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Particle"
              }
            }
          }
        },
        "tags": [
          "particles"
        ]
      }
    },
    "/skins/list": {
      "get": {
        "summary": "Get skin list",
        "tags": [
          "skins"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinListResponse"
                }
              }
            }
          }
        },
        "operationId": "getSkinList",
        "description": "It returns list of skin infos registered in this server\nAlso it can search using query params",
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ]
      }
    },
    "/skins/{skinName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "skinName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get skin",
        "tags": [
          "skins"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getSkin",
        "description": "It returns specified skin info\nIt will raise 404 if the skin is not registered in this server"
      },
      "patch": {
        "summary": "Edit skin",
        "operationId": "editSkin",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "指定したskinを編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skin"
              }
            }
          }
        },
        "tags": [
          "skins"
        ]
      },
      "delete": {
        "summary": "Delete skin",
        "operationId": "deleteSkin",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "skins"
        ],
        "description": "指定されたスキンを削除します"
      }
    },
    "/skins": {
      "parameters": [],
      "post": {
        "summary": "Add skin",
        "operationId": "addSkin",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "指定されたスキン情報をサーバーに登録します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skin"
              }
            }
          }
        },
        "tags": [
          "skins"
        ]
      }
    },
    "/info": {
      "get": {
        "summary": "Get server info",
        "tags": [
          "info"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfo"
                }
              }
            }
          }
        },
        "operationId": "getServerInfo",
        "description": "It returns small list of all infos registered in this server\n(It should be trimed if the server has too many items)"
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUser",
        "description": "指定したユーザー情報を取得します"
      },
      "patch": {
        "summary": "Edit user",
        "operationId": "editUser",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "users"
        ],
        "description": "指定したuser情報を編集します",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "指定したユーザーを削除します",
        "tags": [
          "users"
        ]
      }
    },
    "/users/list": {
      "get": {
        "summary": "Get user list",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUserList",
        "description": "サーバーに登録されたユーザー一覧を返します"
      }
    },
    "/tests/{testId}/info": {
      "get": {
        "summary": "Get user server info",
        "tags": [
          "tests"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfo"
                }
              }
            }
          }
        },
        "operationId": "getTestServerInfo",
        "description": "テスト個別の情報一覧を返します"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/backgrounds/list": {
      "get": {
        "summary": "Get backgrounds for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsBackgrounds",
        "description": "譜面テスト用エンドポイント/ 背景一覧を返す(一般の背景リストと同じのが返される)"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/backgrounds/{backgroundName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "backgroundName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing background",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getBackgroundTest",
        "description": "It returns specified background info\nIt will raise 404 if the background is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/tests/{testId}/effects/list": {
      "get": {
        "summary": "Get effects for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsEffects",
        "description": "譜面テスト用エンドポイント/ エフェクト一覧を返す(一般のエフェクトリストと同じのが返される)"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/effects/{effectName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "effectName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing effect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getEffectTest",
        "description": "It returns specified effect info\nIt will raise 404 if the effect is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/tests/{testId}/engines/list": {
      "get": {
        "summary": "Get engines for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsEngines",
        "description": "譜面テスト用エンドポイント/ エンジン一覧を返す(一般のエンジンリストと同じのが返される)"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/engines/{engineName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "engineName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing engine",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getEngineTest",
        "description": "It returns specified engine info\nIt will raise 404 if the engine is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/tests/{testId}/levels/list": {
      "get": {
        "summary": "Get levels for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsLevels",
        "description": "譜面テスト用エンドポイント/ 背景一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/levels/{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getLevelTest",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/tests/{testId}/particles/list": {
      "get": {
        "summary": "Get particles for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsParticles",
        "description": "譜面テスト用エンドポイント/ パーティクル一覧を返す(一般の背景リストと同じのが返される)"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/particles/{particleName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "particleName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing particle",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getParticleTest",
        "description": "It returns specified particle info\nIt will raise 404 if the particle is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/tests/{testId}/skins/list": {
      "get": {
        "summary": "Get skins for test",
        "tags": [
          "tests"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinListResponse"
                }
              }
            }
          }
        },
        "operationId": "getTestsSkins",
        "description": "譜面テスト用エンドポイント/ スキン一覧を返す(一般のスキンリストと同じのが返される)"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/tests/{testId}/skins/{skinName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "testId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "skinName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get testing skin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getSkinTest",
        "description": "It returns specified skin info\nIt will raise 404 if the skin is not registered in this server",
        "tags": [
          "tests"
        ]
      }
    },
    "/users/{userId}/info": {
      "get": {
        "summary": "Get user server info",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfo"
                }
              }
            }
          }
        },
        "operationId": "getUserServerInfo",
        "description": "ユーザー個別の情報一覧を返します"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/backgrounds/list": {
      "get": {
        "summary": "Get backgrounds for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersBackgrounds",
        "description": "ユーザー個別用エンドポイント/ 背景一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/backgrounds/{backgroundName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "backgroundName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users background",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersBackground",
        "description": "It returns specified background info\nIt will raise 404 if the background is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/effects/list": {
      "get": {
        "summary": "Get effects for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersEffects",
        "description": "ユーザー個別用エンドポイント/ エフェクト一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/effects/{effectName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "effectName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users effect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersEffect",
        "description": "It returns specified effect info\nIt will raise 404 if the effect is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/engines/list": {
      "get": {
        "summary": "Get engines for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersEngines",
        "description": "ユーザー個別用エンドポイント/ エンジン一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/engines/{engineName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "engineName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users engine",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersEngine",
        "description": "It returns specified engine info\nIt will raise 404 if the engine is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/levels/list": {
      "get": {
        "summary": "Get levels for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersLevels",
        "description": "ユーザー個別用エンドポイント/ 背景一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/levels/{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/particles/list": {
      "get": {
        "summary": "Get particles for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersParticles",
        "description": "ユーザー個別用エンドポイント/ パーティクル一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/particles/{particleName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "particleName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users particle",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersParticle",
        "description": "It returns specified particle info\nIt will raise 404 if the particle is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userId}/skins/list": {
      "get": {
        "summary": "Get skins for test",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinListResponse"
                }
              }
            }
          }
        },
        "operationId": "getUsersSkins",
        "description": "ユーザー個別用エンドポイント/ スキン一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userId}/skins/{skinName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "skinName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get users skin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getUsersSkin",
        "description": "It returns specified skin info\nIt will raise 404 if the skin is not registered in this server",
        "tags": [
          "users"
        ]
      }
    },
    "/accounts/{accountKey}/info": {
      "get": {
        "summary": "Get user server info",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfo"
                }
              }
            }
          }
        },
        "operationId": "getAccountsServerInfo",
        "description": "ユーザー個別の情報一覧を返します"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/backgrounds/list": {
      "get": {
        "summary": "Get backgrounds for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsBackgrounds",
        "description": "ユーザー個別用エンドポイント/ 背景一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/backgrounds/{backgroundName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "backgroundName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts background",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsBackground",
        "description": "It returns specified background info\nIt will raise 404 if the background is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/effects/list": {
      "get": {
        "summary": "Get effects for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsEffects",
        "description": "ユーザー個別用エンドポイント/ エフェクト一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/effects/{effectName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "effectName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts effect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEffectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsEffect",
        "description": "It returns specified effect info\nIt will raise 404 if the effect is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/engines/list": {
      "get": {
        "summary": "Get engines for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsEngines",
        "description": "ユーザー個別用エンドポイント/ エンジン一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/engines/{engineName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "engineName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts engine",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEngineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsEngine",
        "description": "It returns specified engine info\nIt will raise 404 if the engine is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/list": {
      "get": {
        "summary": "Get levels for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsLevels",
        "description": "ユーザー個別用エンドポイント/ 譜面一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/levels/{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/favorite_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Add level to user favorite",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "favoriteLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/unfavorite_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Add level to user favorite",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "unfavoriteLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/up_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Rate level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "rateLevel",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/flick_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get flick level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getFlickLevel",
        "description": "譜面のノーツ部分をゴリ押しでフリックのみに差し替えた特殊な譜面を取得する",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/rating_increase_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Rate level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "increaseRating",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/rating_decrease_{levelName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "levelName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Rate level",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "decreaseRating",
        "description": "It returns specified level info\nIt will raise 404 if the level is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/levels/mylist": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get mylist",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountMylist",
        "description": "対象の鍵を持つユーザーのマイリストを取得します"
      }
    },
    "/accounts/{accountKey}/levels/random": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get random",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountRandom",
        "description": "ランダムな譜面を取得します"
      }
    },
    "/accounts/{accountKey}/levels/announce": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get announce list",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountAnnounceList",
        "description": "現在のアナウンス一覧を取得します"
      }
    },
    "/accounts/{accountKey}/levels/announce_{announceName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "announceName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get announce",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountAnnounce",
        "description": "指定されたアナウンス情報を表示します"
      }
    },
    "/accounts/{accountKey}/levels/pickups": {
      "get": {
        "summary": "Get pickups",
        "tags": [
          "pickups"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountPickupLevels",
        "description": "管理者の指定したおすすめ譜面などを返すエンドポイント"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/levels/fresh-release": {
      "get": {
        "summary": "Get pickups",
        "tags": [
          "pickups"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountFreshLevels",
        "description": "新規譜面作者の譜面のみを返すエンドポイント"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/particles/list": {
      "get": {
        "summary": "Get particles for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsParticles",
        "description": "ユーザー個別用エンドポイント/ パーティクル一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/particles/{particleName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "particleName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts particle",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetParticleResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsParticle",
        "description": "It returns specified particle info\nIt will raise 404 if the particle is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/{accountKey}/skins/list": {
      "get": {
        "summary": "Get skins for test",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/localization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/keywords"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAccountsSkins",
        "description": "ユーザー個別用エンドポイント/ スキン一覧を返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        }
      ]
    },
    "/accounts/{accountKey}/skins/{skinName}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountKey",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "skinName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get accounts skin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSkinResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getAccountsSkin",
        "description": "It returns specified skin info\nIt will raise 404 if the skin is not registered in this server",
        "tags": [
          "accounts"
        ]
      }
    },
    "/pickups": {
      "post": {
        "summary": "Add Pickup",
        "operationId": "addPickup",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pickup"
              }
            }
          }
        },
        "description": "譜面のピックアップを追加します",
        "tags": [
          "pickups"
        ]
      }
    },
    "/pickups/{pickupName}": {
      "delete": {
        "summary": "Delete pickup",
        "operationId": "deletePickup",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "指定したピックアップを削除します",
        "tags": [
          "pickups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pickup"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "pickupName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get pickup",
        "operationId": "getPickup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          }
        },
        "tags": [
          "pickups"
        ],
        "description": "指定されたIDのピックアップを取得して返す"
      }
    },
    "/pickups/list": {
      "get": {
        "summary": "Get pickup list",
        "tags": [
          "announces"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getPickupList",
        "description": "ピックアップ中のデータ一覧を返す"
      }
    },
    "/announces": {
      "post": {
        "summary": "Add announce",
        "operationId": "addAnnounce",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Announce"
              }
            }
          }
        },
        "description": "譜面のピックアップを追加します",
        "tags": [
          "announces"
        ]
      }
    },
    "/announces/list": {
      "get": {
        "summary": "Get announce list",
        "tags": [
          "announces"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelListResponse"
                }
              }
            }
          }
        },
        "operationId": "getAnnounces",
        "description": "アナウンス中のデータ一覧を返す"
      }
    },
    "/announces/{announceName}": {
      "get": {
        "summary": "Get announce",
        "tags": [
          "announces"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLevelResponse"
                }
              }
            }
          }
        },
        "operationId": "getAnnounce",
        "description": "指定されたアナウンスデータを返す"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "announceName",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete announce",
        "operationId": "deleteAnnounce",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "指定されたアナウンスを削除します",
        "tags": [
          "announces"
        ]
      },
      "patch": {
        "summary": "Edit announce",
        "operationId": "editAnnounce",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "指定したアナウンスを編集します",
        "tags": [
          "announces"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Announce"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Level": {
        "description": "A level provides a list of entities and powered by scripted behavior in engine, with skin, effect, background and particle, to create gameplay experience for players / It defines level for actual user play. It includes all data to play one level.\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Level",
        "type": "object",
        "x-examples": {},
        "title": "Level",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 100
          },
          "version": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "example": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "rating": {
            "type": "integer",
            "description": "Difficulty of the level",
            "minimum": 1,
            "maximum": 1000
          },
          "engine": {
            "$ref": "#/components/schemas/Engine"
          },
          "useSkin": {
            "type": "object",
            "properties": {
              "useDefault": {
                "type": "boolean",
                "description": "If true (recommended), default resource specified by the engine will be used."
              },
              "item": {
                "$ref": "#/components/schemas/Skin"
              }
            }
          },
          "useBackground": {
            "type": "object",
            "properties": {
              "useDefault": {
                "type": "boolean",
                "description": "If true (recommended), default resource specified by the engine will be used."
              },
              "item": {
                "$ref": "#/components/schemas/Background"
              }
            }
          },
          "useEffect": {
            "type": "object",
            "properties": {
              "useDefault": {
                "type": "boolean",
                "description": "If true (recommended), default resource specified by the engine will be used."
              },
              "item": {
                "$ref": "#/components/schemas/Effect"
              }
            }
          },
          "useParticle": {
            "type": "object",
            "properties": {
              "useDefault": {
                "type": "boolean",
                "description": "If true (recommended), default resource specified by the engine will be used."
              },
              "item": {
                "$ref": "#/components/schemas/Particle"
              }
            }
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "artists": {
            "type": "string",
            "minLength": 1,
            "description": "artist names of original music",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content",
            "maxLength": 50
          },
          "cover": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "bgm": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "genre": {
            "type": "string",
            "description": "独自要素: 楽曲のジャンル",
            "enum": [
              "general",
              "jpop",
              "anime",
              "vocaloid"
            ],
            "example": "general",
            "minLength": 1,
            "maxLength": 20,
            "default": "general"
          },
          "public": {
            "type": "boolean",
            "default": false,
            "description": "独自要素: 楽曲が全体公開かどうか"
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "notes": {
            "type": "integer",
            "description": "独自要素: 譜面内のノーツ数",
            "minimum": 1,
            "maximum": 10000000
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          },
          "length": {
            "type": "integer",
            "default": 0,
            "example": 0,
            "minimum": 0,
            "maximum": 99999,
            "description": "独自要素: 曲の長さ"
          }
        }
      },
      "Skin": {
        "description": "A skin provides graphic elements to levels / It defines graphics for specific level\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Skin\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Server",
        "type": "object",
        "x-examples": {},
        "title": "Skin",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 100
          },
          "version": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "example": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "subtitle": {
            "type": "string",
            "minLength": 1,
            "description": "something footer(ex. featuring xyz) for this content",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content",
            "maxLength": 50
          },
          "thumbnail": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "texture": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "Background": {
        "description": "A background provides background graphical element to levels / It defines background used for specific level\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Background",
        "type": "object",
        "x-examples": {},
        "title": "Background",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 50
          },
          "version": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "example": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "subtitle": {
            "type": "string",
            "minLength": 1,
            "description": "something footer(ex. featuring xyz) for this content",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content",
            "maxLength": 50
          },
          "thumbnail": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "image": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "Effect": {
        "description": "An effect provides audio elements to levels / It defines audio effect used for specific level\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Effect",
        "type": "object",
        "x-examples": {},
        "title": "Effect",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 100
          },
          "version": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "example": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "subtitle": {
            "type": "string",
            "minLength": 1,
            "description": "something footer(ex. featuring xyz) for this content",
            "maxLength": 50
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "Particle": {
        "description": "A particle provides particle effect elements to levels / It defines particle effect used for specific level\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Particle",
        "type": "object",
        "x-examples": {},
        "title": "Particle",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 100
          },
          "version": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "example": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "subtitle": {
            "type": "string",
            "minLength": 1,
            "description": "something footer(ex. featuring xyz) for this content",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content",
            "maxLength": 50
          },
          "thumbnail": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "texture": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "Engine": {
        "description": "An engine provides scripted behaviors to levels / It defines shared game engine for playing\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Engine",
        "type": "object",
        "x-examples": {},
        "title": "Engine",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "english and number only name for searching",
            "maxLength": 100
          },
          "version": {
            "type": "integer",
            "default": 1,
            "example": 1,
            "minimum": 1,
            "description": "Reserved for future update. current default is 1.",
            "maximum": 100
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "base title of this content",
            "maxLength": 100
          },
          "subtitle": {
            "type": "string",
            "minLength": 1,
            "description": "something footer(ex. featuring xyz) for this content",
            "maxLength": 100
          },
          "author": {
            "type": "string",
            "minLength": 1,
            "description": "author of this content",
            "maxLength": 50
          },
          "thumbnail": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "data": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "configuration": {
            "$ref": "#/components/schemas/SonolusResourceLocator"
          },
          "skin": {
            "$ref": "#/components/schemas/Skin"
          },
          "background": {
            "$ref": "#/components/schemas/Background"
          },
          "effect": {
            "$ref": "#/components/schemas/Effect"
          },
          "particle": {
            "$ref": "#/components/schemas/Particle"
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "userId": {
            "type": "string",
            "description": "独自要素: 譜面作成者のユーザーID",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "SonolusResourceLocator": {
        "description": "Sonolus Resource Locator(SRL) is used in server endpoints in order for Sonolus to locate a resource.\nAll resources must be gzip compressed.\nhttps://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Resource-and-SRL",
        "type": "object",
        "x-examples": {
          "example": {
            "type": "EffectData",
            "hash": "addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39",
            "url": "/repository/EffectData/addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39"
          }
        },
        "title": "SonolusResourceLocator",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "SkinData",
              "EngineThumbnail",
              "EffectData",
              "SkinTexture",
              "ParticleData",
              "EffectThumbnail",
              "LevelBgm",
              "BackgroundThumbnail",
              "EngineConfiguration",
              "LevelData",
              "ParticleTexture",
              "BackgroundData",
              "EngineData",
              "BackgroundImage",
              "LevelCover",
              "SkinThumbnail",
              "ParticleThumbnail"
            ],
            "example": "LevelData",
            "maxLength": 50,
            "description": "When specify type together with hash uniquely identifies a resource."
          },
          "hash": {
            "type": "string",
            "minLength": 1,
            "description": "Hash is calculated using SHA1 on the resource file",
            "maxLength": 100
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "description": "If url starts with character /, it will be treated as relative path to server address.",
            "maxLength": 500
          }
        }
      },
      "GetBackgroundListResponse": {
        "title": "GetBackgroundListResponse",
        "type": "object",
        "x-examples": {
          "example-1": {
            "value": {
              "pageCount": 1,
              "items": [
                {
                  "name": "string",
                  "version": 1,
                  "title": "string",
                  "subtitle": "string",
                  "author": "string",
                  "thumbnail": {
                    "type": "LevelData",
                    "hash": "string",
                    "url": "string"
                  },
                  "data": {
                    "type": "LevelData",
                    "hash": "string",
                    "url": "string"
                  },
                  "image": {
                    "type": "LevelData",
                    "hash": "string",
                    "url": "string"
                  },
                  "createdTime": 0,
                  "updatedTime": 0,
                  "userId": "string"
                }
              ]
            }
          }
        },
        "description": "Response struct of getBackgroundList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Background"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetEffectListResponse": {
        "title": "GetEffectListResponse",
        "type": "object",
        "x-examples": {},
        "description": "Response struct of getEffectList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Effect"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetEngineListResponse": {
        "title": "GetEngineListResponse",
        "type": "object",
        "x-examples": {},
        "description": "Response struct of getEngineList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Engine"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetLevelListResponse": {
        "title": "GetLevelListResponse",
        "type": "object",
        "x-examples": {},
        "description": "Response struct of getLevelList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Level"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetParticleListResponse": {
        "title": "GetParticleListResponse",
        "type": "object",
        "x-examples": {},
        "description": "Response struct of getParticleList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Particle"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetSkinListResponse": {
        "title": "GetSkinListResponse",
        "type": "object",
        "x-examples": {},
        "description": "Response struct of getSkinList",
        "properties": {
          "pageCount": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "example": 1,
            "description": "used for pagination, default is 1"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skin"
            }
          }
        },
        "required": [
          "pageCount",
          "items"
        ]
      },
      "GetLevelResponse": {
        "description": "Response struct of getLevel",
        "type": "object",
        "x-examples": {},
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Level"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Level"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ],
        "title": "GetLevelResponse"
      },
      "GetBackgroundResponse": {
        "description": "Response struct of getBackground",
        "type": "object",
        "x-examples": {},
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Background"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Background"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ],
        "title": "GetBackgroundResponse"
      },
      "GetEffectResponse": {
        "description": "Response struct of getEffect",
        "type": "object",
        "x-examples": {},
        "title": "GetEffectResponse",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Effect"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Effect"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ]
      },
      "GetEngineResponse": {
        "description": "Response struct of getEngine",
        "type": "object",
        "x-examples": {},
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Engine"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Engine"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ],
        "title": "GetEngineResponse"
      },
      "GetParticleResponse": {
        "description": "Response struct of getParticle",
        "type": "object",
        "x-examples": {},
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Particle"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Particle"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ],
        "title": "GetParticleResponse"
      },
      "GetSkinResponse": {
        "description": "Response struct of getSkin",
        "type": "object",
        "x-examples": {},
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Skin"
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "recommended": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skin"
            }
          }
        },
        "required": [
          "item",
          "description",
          "recommended"
        ],
        "title": "GetSkinResponse"
      },
      "ServerInfo": {
        "description": "Response / Request struct of getServerInfo",
        "type": "object",
        "x-examples": {
          "example-1": {
            "levels": [],
            "skins": [],
            "backgrounds": [],
            "effects": [],
            "particles": [],
            "engines": []
          }
        },
        "title": "ServerInfo",
        "properties": {
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Level"
            }
          },
          "skins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skin"
            }
          },
          "backgrounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Background"
            }
          },
          "effects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Effect"
            }
          },
          "particles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Particle"
            }
          },
          "engines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Engine"
            }
          }
        },
        "required": [
          "levels",
          "skins",
          "backgrounds",
          "effects",
          "particles",
          "engines"
        ]
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "ユーザー情報型",
        "properties": {
          "userId": {
            "type": "string",
            "description": "FirebaseDatabase上のユーザーID",
            "example": "gz6xQrm79IN4BiQag78sQqYWYlC3",
            "default": "gz6xQrm79IN4BiQag78sQqYWYlC3",
            "minLength": 1,
            "maxLength": 30
          },
          "testId": {
            "type": "string",
            "description": "テスト用サーバーのエンドポイント",
            "example": "htcckfcn",
            "minLength": 8,
            "maxLength": 8,
            "default": "htcckfcn"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "管理者か否か。API経由の変更は不可で管理パネルからどうこうする",
            "default": false
          },
          "isDeleted": {
            "type": "boolean",
            "description": "アカウント削除フラグ(trueで削除済み扱い)",
            "default": false
          },
          "createdTime": {
            "type": "integer",
            "description": "独自要素: データを作成したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "updatedTime": {
            "type": "integer",
            "description": "独自要素: データを更新したエポックミリ秒(ソート用)",
            "minimum": 0
          },
          "description": {
            "type": "string",
            "description": "独自要素: サイト内および譜面情報欄に表示される説明文",
            "minLength": 1,
            "maxLength": 3000
          },
          "totalFumen": {
            "type": "integer",
            "description": "投稿した譜面数",
            "minimum": 0,
            "maximum": 1000000
          },
          "totalLikes": {
            "type": "integer",
            "description": "いいねを受けた回数",
            "minimum": 0,
            "maximum": 1000000
          },
          "totalPlayed": {
            "type": "integer",
            "description": "プレイしたことがある譜面の数(リクエストをカウントするだけなので曖昧...)",
            "minimum": 0,
            "maximum": 1000000
          }
        }
      },
      "GetUserListResponse": {
        "title": "GetUserListResponse",
        "type": "object",
        "description": "Structure of getList response",
        "properties": {
          "users": {
            "type": "array",
            "description": "サーバーに登録されたユーザー一覧",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer",
            "description": "合計アカウント数"
          },
          "pages": {
            "type": "integer",
            "description": "合計ページ数"
          }
        },
        "required": [
          "users",
          "total",
          "pages"
        ]
      },
      "Pickup": {
        "title": "Pickup",
        "type": "object",
        "description": "おすすめ譜面のリクエスト(独自)",
        "properties": {
          "levelName": {
            "type": "string",
            "description": "譜面ID"
          },
          "order": {
            "type": "integer",
            "description": "表示順序",
            "minimum": 10000,
            "maximum": 99999
          }
        },
        "required": [
          "levelName",
          "order"
        ]
      },
      "Announce": {
        "title": "Announce",
        "type": "object",
        "description": "お知らせ情報のリクエスト",
        "properties": {
          "announceName": {
            "type": "string",
            "description": "アナウンスID(取得するときは接頭辞にannounce_が入る)"
          },
          "title": {
            "type": "string",
            "description": "お知らせのタイトル"
          },
          "subtitle": {
            "type": "string",
            "description": "お知らせの要約(Levelでいうartistsエリア)"
          },
          "date": {
            "type": "string",
            "description": "お知らせの作成日(Levelでいう譜面作者エリア)"
          },
          "body": {
            "type": "string",
            "description": "お知らせの内容"
          },
          "resources": {
            "type": "object",
            "description": "アイコンとBGM(任意)",
            "properties": {
              "icon": {
                "type": "string",
                "description": "アイコン画像URL(指定したらあとはAPI内部でよしなにしてくれる...はず)"
              },
              "bgm": {
                "type": "string",
                "description": "BGMのURL(指定したらAPI内部でよしなに)"
              },
              "level": {
                "type": "string",
                "description": "レベルIDを指定した場合、指定された譜面がDLされる(その場合BGMパラメータは無視される)"
              }
            }
          }
        },
        "required": [
          "announceName",
          "title",
          "subtitle",
          "date",
          "body"
        ]
      }
    },
    "securitySchemes": {},
    "parameters": {
      "localization": {
        "name": "localization",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "en",
          "maxLength": 50,
          "minLength": 1
        },
        "description": "It localizes response items if possible"
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10000,
          "example": 1,
          "default": 1
        },
        "description": "It filters items for pagination if possible"
      },
      "keywords": {
        "name": "keywords",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Redo",
          "maxLength": 300,
          "minLength": 1
        },
        "description": "It filters items for search from list if possible"
      }
    }
  },
  "tags": [
    {
      "name": "accounts"
    },
    {
      "name": "announces"
    },
    {
      "name": "backgrounds"
    },
    {
      "name": "effects"
    },
    {
      "name": "engines"
    },
    {
      "name": "info"
    },
    {
      "name": "levels"
    },
    {
      "name": "particles"
    },
    {
      "name": "pickups"
    },
    {
      "name": "skins"
    },
    {
      "name": "tests"
    },
    {
      "name": "users"
    }
  ],
  "security": []
}