name: Run test
on:
  push:

jobs:
  test:
    name: CI
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Create .env file
        run: mv .env_test .env
      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run containers
        run: |
          source .env
          docker-compose up -d
        env:
          DB_ROOT: "sonolus"
          DB_NAME: "sonolus"
          DB_USER: "sonolus"
          DB_PASS: "sonolus"
          PORT_API: 8080
          PORT_DB: 3306
          PORT_SUS: 7000
          PORT_MINIO: 9000
          PORT_MINIO_CONSOLE: 9001
          PORT_ADMINER: 8077
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_SECRET: ${{ secrets.S3_SECRET }}
          VOLUME_API_PATH: "./api_data"
          VOLUME_DB_PATH: "./db_data"
          VOLUME_MINIO_PATH: "./minio_data"
      - name: Run Test
        run: |
          poetry run pytest --cov --cov-report=xml
        env:
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_SECRET: ${{ secrets.S3_SECRET }}
          CDN_ENDPOINT: ${{ secrets.CDN_ENDPOINT }}
          FIREBASE_CRED: ${{ secrets.FIREBASE_CRED }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          IS_DEV: 1
      - name: Stop containers
        run: |
          docker-compose down
        env:
          DB_ROOT: "sonolus"
          DB_NAME: "sonolus"
          DB_USER: "sonolus"
          DB_PASS: "sonolus"
          PORT_API: 8080
          PORT_DB: 3306
          PORT_SUS: 7000
          PORT_MINIO: 9000
          PORT_MINIO_CONSOLE: 9001
          PORT_ADMINER: 8077
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_SECRET: ${{ secrets.S3_SECRET }}
          VOLUME_API_PATH: "./api_data"
          VOLUME_DB_PATH: "./db_data"
          VOLUME_MINIO_PATH: "./minio_data"
      - name: Upload result to codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
          name: codecov-umbrella # optional
          flags: unittests # optional
          directory: "!db_data"
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
